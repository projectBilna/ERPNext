frappe.provide('frappe.views.formview');frappe.views.FormFactory=frappe.views.Factory.extend({make:function(route){var me=this,dt=route[1];if(!frappe.views.formview[dt]){frappe.model.with_doctype(dt,function(){me.page=frappe.container.add_page("Form/"+dt);frappe.views.formview[dt]=me.page;me.page.frm=new _f.Frm(dt,me.page,true);me.show_doc(route);});}else{me.show_doc(route);}
if(!this.initialized){$(document).on("page-change",function(){frappe.ui.form.close_grid_form();});frappe.realtime.on("new_comment",function(data){frappe.model.new_comment(data);});}
this.initialized=true;},show_doc:function(route){var dt=route[1],dn=route.slice(2).join("/"),me=this;if(frappe.model.new_names[dn]){dn=frappe.model.new_names[dn];frappe.set_route("Form",dt,dn);return;}
frappe.model.with_doc(dt,dn,function(dn,r){if(r&&r['403'])return;if(!(locals[dt]&&locals[dt][dn])){var new_str=__("New")+" ";if(dn&&dn.substr(0,new_str.length)==new_str){var new_name=frappe.model.make_new_doc_and_get_name(dt);if(new_name===dn){me.load(dt,dn);}else{frappe.set_route("Form",dt,new_name)}}else{frappe.show_not_found(route);}
return;}
me.load(dt,dn);});},load:function(dt,dn){frappe.container.change_to("Form/"+dt);frappe.views.formview[dt].frm.refresh(dn);}});;frappe.provide('_f');frappe.provide('frappe.ui.form');frappe.ui.form.Controller=Class.extend({init:function(opts){$.extend(this,opts);this.setup&&this.setup();}});_f.frms={};_f.Frm=function(doctype,parent,in_form){this.docname='';this.doctype=doctype;this.display=0;this.refresh_if_stale_for=120;var me=this;this.opendocs={};this.sections=[];this.grids=[];this.cscript=new frappe.ui.form.Controller({frm:this});this.events={};this.pformat={};this.fetch_dict={};this.parent=parent;this.tinymce_id_list=[];this.setup_meta(doctype);this.in_form=in_form?true:false;var me=this;$(document).on('rename',function(event,dt,old_name,new_name){if(dt==me.doctype)
me.rename_notify(dt,old_name,new_name)});}
_f.Frm.prototype.check_doctype_conflict=function(docname){var me=this;if(this.doctype=='DocType'&&docname=='DocType'){msgprint(__('Allowing DocType, DocType. Be careful!'))}else if(this.doctype=='DocType'){if(frappe.views.formview[docname]||frappe.pages['List/'+docname]){msgprint(__("Cannot open {0} when its instance is open",['DocType']))
throw'doctype open conflict'}}else{if(frappe.views.formview.DocType&&frappe.views.formview.DocType.frm.opendocs[this.doctype]){msgprint(__("Cannot open instance when its {0} is open",['DocType']))
throw'doctype open conflict'}}}
_f.Frm.prototype.setup=function(){var me=this;this.fields=[];this.fields_dict={};this.state_fieldname=frappe.workflow.get_state_fieldname(this.doctype);this.wrapper=this.parent;frappe.ui.make_app_page({parent:this.wrapper,single_column:this.meta.hide_toolbar});this.page=this.wrapper.page;this.layout_main=this.page.main.get(0);this.toolbar=new frappe.ui.form.Toolbar({frm:this,page:this.page});this.setup_print_layout();this.setup_std_layout();this.script_manager=new frappe.ui.form.ScriptManager({frm:this});this.script_manager.setup();this.watch_model_updates();if(!this.meta.hide_toolbar){this.footer=new frappe.ui.form.Footer({frm:this,parent:$('<div>').appendTo(this.page.main.parent())})}
this.setup_drag_drop();this.setup_done=true;}
_f.Frm.prototype.setup_drag_drop=function(){var me=this;$(this.wrapper).on('dragenter dragover',false).on('drop',function(e){var dataTransfer=e.originalEvent.dataTransfer;if(!(dataTransfer&&dataTransfer.files&&dataTransfer.files.length>0)){return;}
e.stopPropagation();e.preventDefault();if(me.doc.__islocal){msgprint(__("Please save before attaching."));throw"attach error";}
if(me.attachments.max_reached()){msgprint(__("Maximum Attachment Limit for this record reached."));throw"attach error";}
frappe.upload.upload_file(dataTransfer.files[0],me.attachments.get_args(),{callback:function(attachment,r){me.attachments.attachment_uploaded(attachment,r);}});});}
_f.Frm.prototype.setup_print_layout=function(){this.print_preview=new frappe.ui.form.PrintPreview({frm:this})}
_f.Frm.prototype.print_doc=function(){if(this.print_preview.wrapper.is(":visible")){this.hide_print();return;}
if(!frappe.model.can_print(this.doc.doctype,cur_frm)){msgprint(__("You are not allowed to print this document"));return;}
if(this.doc.docstatus==2){msgprint(__("Cannot print cancelled documents"));return;}
this.print_preview.refresh_print_options().trigger("change");this.page.set_view("print");}
_f.Frm.prototype.hide_print=function(){if(this.setup_done&&this.page.current_view_name==="print"){this.page.set_view(this.page.previous_view_name==="print"?"main":(this.page.previous_view_name||"main"));}}
_f.Frm.prototype.watch_model_updates=function(){var me=this;frappe.model.on(me.doctype,"*",function(fieldname,value,doc){if(doc.name===me.docname){me.dirty();me.fields_dict[fieldname]&&me.fields_dict[fieldname].refresh(fieldname);me.layout.refresh_dependency();me.script_manager.trigger(fieldname,doc.doctype,doc.name);}})
var table_fields=frappe.get_children("DocType",me.doctype,"fields",{fieldtype:"Table"});$.each(table_fields,function(i,df){frappe.model.on(df.options,"*",function(fieldname,value,doc){if(doc.parent===me.docname&&doc.parentfield===df.fieldname){me.dirty();me.fields_dict[df.fieldname].grid.set_value(fieldname,value,doc);me.script_manager.trigger(fieldname,doc.doctype,doc.name);}});});}
_f.Frm.prototype.setup_std_layout=function(){this.form_wrapper=$('<div></div>').appendTo(this.layout_main);this.body=$('<div></div>').appendTo(this.form_wrapper);this.meta.section_style='Simple';this.layout=new frappe.ui.form.Layout({parent:this.body,doctype:this.doctype,frm:this,});this.layout.make();this.fields_dict=this.layout.fields_dict;this.fields=this.layout.fields_list;this.dashboard=new frappe.ui.form.Dashboard({frm:this,});this.states=new frappe.ui.form.States({frm:this});}
_f.Frm.prototype.email_doc=function(message){new frappe.views.CommunicationComposer({doc:this.doc,frm:this,subject:__(this.meta.name)+': '+this.docname,recipients:this.doc.email||this.doc.email_id||this.doc.contact_email,attach_document_print:true,message:message,real_name:this.doc.real_name||this.doc.contact_display||this.doc.contact_name});}
_f.Frm.prototype.rename_doc=function(){frappe.model.rename_doc(this.doctype,this.docname);}
_f.Frm.prototype.share_doc=function(){this.shared.show();}
_f.Frm.prototype.rename_notify=function(dt,old,name){if(this.meta.istable)
return;if(this.docname==old)
this.docname=name;else
return;if(this&&this.opendocs[old]&&frappe.meta.docfield_copy[dt]){frappe.meta.docfield_copy[dt][name]=frappe.meta.docfield_copy[dt][old];delete frappe.meta.docfield_copy[dt][old];}
delete this.opendocs[old];this.opendocs[name]=true;if(this.meta.in_dialog||!this.in_form){return;}
frappe.re_route[window.location.hash]='#Form/'+encodeURIComponent(this.doctype)+'/'+encodeURIComponent(name);frappe.set_route('Form',this.doctype,name);}
_f.Frm.prototype.setup_meta=function(doctype){this.meta=frappe.get_doc('DocType',this.doctype);this.perm=frappe.perm.get_perm(this.doctype);if(this.meta.istable){this.meta.in_dialog=1}}
_f.Frm.prototype.refresh_header=function(is_a_different_doc){if(!this.meta.in_dialog||this.in_form){frappe.utils.set_title(this.meta.issingle?this.doctype:this.docname);}
if(frappe.ui.toolbar.recent)
frappe.ui.toolbar.recent.add(this.doctype,this.docname,1);if(this.toolbar){if(is_a_different_doc){this.toolbar.current_status=undefined;}
this.toolbar.refresh();}
this.dashboard.reset();this.clear_custom_buttons();this.show_web_link();}
_f.Frm.prototype.show_web_link=function(){var doc=this.doc,me=this;if(!doc.__islocal&&doc.__onload&&doc.__onload.is_website_generator){me.web_link&&me.web_link.remove();if(doc.__onload.published){me.web_link=me.sidebar.add_user_action("See on Website",function(){}).attr("href","/"+doc.__onload.website_route).attr("target","_blank");}}}
_f.Frm.prototype.check_doc_perm=function(){var dt=this.parent_doctype?this.parent_doctype:this.doctype;this.perm=frappe.perm.get_perm(dt,this.doc);if(!this.perm[0].read){return 0;}
return 1}
_f.Frm.prototype.refresh=function(docname){var is_a_different_doc=docname?true:false;if(docname){if(this.docname!=docname&&(!this.meta.in_dialog||this.in_form)&&!this.meta.istable){scroll(0,0);this.hide_print();}
frappe.ui.form.close_grid_form();this.docname=docname;}
cur_frm=this;if(this.docname){this.doc=frappe.get_doc(this.doctype,this.docname);if(!this.check_doc_perm()){frappe.show_not_permitted(__(this.doctype)+" "+__(this.docname));return;}
this.read_only=frappe.workflow.is_read_only(this.doctype,this.docname);if(!this.opendocs[this.docname]){this.check_doctype_conflict(this.docname);}else{if(this.doc&&(!this.doc.__unsaved)&&this.doc.__last_sync_on&&(new Date()-this.doc.__last_sync_on)>(this.refresh_if_stale_for*1000)){this.reload_doc();return;}}
if(!this.setup_done)this.setup();cur_frm.cscript.is_onload=false;if(!this.opendocs[this.docname]){var me=this;cur_frm.cscript.is_onload=true;this.setnewdoc();$(document).trigger("form-load",[this]);$(this.page.wrapper).on('hide',function(e){$(document).trigger("form-unload",[me]);})}else{this.render_form(is_a_different_doc);if(this.doc.localname){delete this.doc.localname;$(document).trigger("form-rename",[this]);}}
if(this.print_preview.wrapper.is(":visible")){this.print_preview.preview();}
this.show_if_needs_refresh();}}
_f.Frm.prototype.show_if_needs_refresh=function(){if(this.doc.__needs_refresh){this.dashboard.set_headline_alert(__("This form has been modified after you have loaded it")
+'<a class="btn btn-xs btn-primary pull-right" onclick="cur_frm.reload_doc()">'
+__("Refresh")+'</a>',"alert-warning");}}
_f.Frm.prototype.render_form=function(is_a_different_doc){if(!this.meta.istable){this.layout.doc=this.doc;this.layout.attach_doc_and_docfields()
this.sidebar=new frappe.ui.form.Sidebar({frm:this,page:this.page});this.refresh_header(is_a_different_doc);this.script_manager.trigger("refresh");$(document).trigger('form_refresh');this.refresh_fields();if(this.cscript.is_onload){this.script_manager.trigger("onload_post_render");}
if(this.doc.docstatus==0){var first=this.form_wrapper.find('.form-layout-row :input:first');if(!in_list(["Date","Datetime"],first.attr("data-fieldtype"))){first.focus();}}}else{this.refresh_header(is_a_different_doc);}
$(cur_frm.wrapper).trigger('render_complete');this.layout.show_empty_form_message();}
_f.Frm.prototype.refresh_field=function(fname){cur_frm.fields_dict[fname]&&cur_frm.fields_dict[fname].refresh&&cur_frm.fields_dict[fname].refresh();}
_f.Frm.prototype.refresh_fields=function(){this.layout.refresh(this.doc);this.layout.primary_button=$(this.wrapper).find(".btn-primary");this.cleanup_refresh(this);}
_f.Frm.prototype.cleanup_refresh=function(){var me=this;if(me.fields_dict['amended_from']){if(me.doc.amended_from){unhide_field('amended_from');if(me.fields_dict['amendment_date'])unhide_field('amendment_date');}else{hide_field('amended_from');if(me.fields_dict['amendment_date'])hide_field('amendment_date');}}
if(me.fields_dict['trash_reason']){if(me.doc.trash_reason&&me.doc.docstatus==2){unhide_field('trash_reason');}else{hide_field('trash_reason');}}
if(me.meta.autoname&&me.meta.autoname.substr(0,6)=='field:'&&!me.doc.__islocal){var fn=me.meta.autoname.substr(6);cur_frm.toggle_display(fn,false);}
if(me.meta.autoname=="naming_series:"&&!me.doc.__islocal){cur_frm.toggle_display("naming_series",false);}}
_f.Frm.prototype.setnewdoc=function(){var me=this;this.script_manager.trigger("before_load",this.doctype,this.docname,function(){me.script_manager.trigger("onload");me.opendocs[me.docname]=true;me.render_form();if(frappe.route_options){$.each(frappe.route_options,function(fieldname,value){try{me.set_value(fieldname,value);}catch(e){}});frappe.route_options=null;}
frappe.breadcrumbs.add(me.meta.module,me.doctype)})}
_f.Frm.prototype.runscript=function(scriptname,callingfield,onrefresh){var me=this;if(this.docname){if(callingfield)
$(callingfield.input).set_working();frappe.call({method:"runserverobj",args:{'docs':this.doc,'method':scriptname},btn:callingfield.$input,callback:function(r){if(!r.exc){if(onrefresh){onrefresh(r);}
me.refresh_fields();}}});}}
_f.Frm.prototype.copy_doc=function(onload,from_amend){this.validate_form_action("Create");var newdoc=frappe.model.copy_doc(this.doc,from_amend);newdoc.idx=null;if(onload)onload(newdoc);loaddoc(newdoc.doctype,newdoc.name);}
_f.Frm.prototype.reload_doc=function(){this.check_doctype_conflict(this.docname);var me=this;var onsave=function(r,rtxt){me.refresh();}
if(!me.doc.__islocal){frappe.model.remove_from_locals(me.doctype,me.docname);frappe.model.with_doc(me.doctype,me.docname,function(){me.refresh();})}}
var validated;_f.Frm.prototype.save=function(save_action,callback,btn,on_error){btn&&$(btn).prop("disabled",true);$(document.activeElement).blur();frappe.ui.form.close_grid_form();var me=this;setTimeout(function(){me._save(save_action,callback,btn,on_error)},100);}
_f.Frm.prototype._save=function(save_action,callback,btn,on_error){var me=this;if(!save_action)save_action="Save";this.validate_form_action(save_action);if((!this.meta.in_dialog||this.in_form)&&!this.meta.istable)
scroll(0,0);var after_save=function(r){if(!r.exc){me.script_manager.trigger("after_save");me.refresh();}else{if(on_error)
on_error();}
callback&&callback(r);if(frappe._from_link){if(me.doctype===frappe._from_link.df.options){frappe._from_link.parse_validate_and_set_in_model(me.docname);frappe.set_route("Form",frappe._from_link.frm.doctype,frappe._from_link.frm.docname);setTimeout(function(){scroll(0,frappe._from_link_scrollY);},100);}
frappe._from_link=null;}}
if(save_action!="Update"){validated=true;$.when(this.script_manager.trigger("validate"),this.script_manager.trigger("before_save")).done(function(){if(!validated){btn&&$(btn).prop("disabled",false);if(on_error){on_error();}
return;}
frappe.ui.form.save(me,save_action,after_save,btn);});}else{frappe.ui.form.save(me,save_action,after_save,btn);}}
_f.Frm.prototype.savesubmit=function(btn,callback,on_error){var me=this;this.validate_form_action("Submit");frappe.confirm(__("Permanently Submit {0}?",[this.docname]),function(){validated=true;me.script_manager.trigger("before_submit").done(function(){if(!validated){if(on_error)
on_error();return;}
me.save('Submit',function(r){if(!r.exc){callback&&callback();me.script_manager.trigger("on_submit");}},btn,on_error);});},on_error);};_f.Frm.prototype.savecancel=function(btn,callback,on_error){var me=this;this.validate_form_action('Cancel');frappe.confirm(__("Permanently Cancel {0}?",[this.docname]),function(){validated=true;me.script_manager.trigger("before_cancel").done(function(){if(!validated){if(on_error)
on_error();return;}
var after_cancel=function(r){if(!r.exc){me.refresh();callback&&callback();me.script_manager.trigger("after_cancel");}else{on_error();}}
frappe.ui.form.save(me,"cancel",after_cancel,btn);});},on_error);}
_f.Frm.prototype.savetrash=function(){this.validate_form_action("Delete");frappe.model.delete_doc(this.doctype,this.docname,function(r){window.history.back();})}
_f.Frm.prototype.amend_doc=function(){if(!this.fields_dict['amended_from']){alert('"amended_from" field must be present to do an amendment.');return;}
this.validate_form_action("Amend");var me=this;var fn=function(newdoc){newdoc.amended_from=me.docname;if(me.fields_dict&&me.fields_dict['amendment_date'])
newdoc.amendment_date=dateutil.obj_to_str(new Date());}
this.copy_doc(fn,1);}
_f.Frm.prototype.disable_save=function(){this.save_disabled=true;this.page.clear_primary_action();}
_f.Frm.prototype.enable_save=function(){this.save_disabled=false;this.toolbar.set_primary_action();}
_f.Frm.prototype.save_or_update=function(){if(this.save_disabled)return;if(this.doc.docstatus===0){this.save();}else if(this.doc.docstatus===1&&this.doc.__unsaved){this.save("Update");}}
_f.get_value=function(dt,dn,fn){if(locals[dt]&&locals[dt][dn])
return locals[dt][dn][fn];}
_f.Frm.prototype.dirty=function(){this.doc.__unsaved=1;$(this.wrapper).trigger('dirty');}
_f.Frm.prototype.get_docinfo=function(){return frappe.model.docinfo[this.doctype][this.docname];}
_f.Frm.prototype.reload_docinfo=function(callback){var me=this;frappe.call({method:"frappe.desk.form.load.get_docinfo",args:{doctype:me.doctype,name:me.doc.name},callback:function(r){if(callback)callback(r.docinfo);me.comments.refresh();me.assign_to.refresh();me.attachments.refresh();}})}
_f.Frm.prototype.get_perm=function(permlevel,access_type){return this.perm[permlevel]?this.perm[permlevel][access_type]:null;}
_f.Frm.prototype.set_intro=function(txt,append){frappe.utils.set_intro(this,this.body,txt,append);}
_f.Frm.prototype.set_footnote=function(txt){frappe.utils.set_footnote(this,this.body,txt);}
_f.Frm.prototype.add_custom_button=function(label,fn,icon,toolbar_or_class){return this.page.add_inner_button(label,fn);}
_f.Frm.prototype.clear_custom_buttons=function(){this.page.inner_toolbar.empty().addClass("hide");this.page.clear_user_actions();}
_f.Frm.prototype.add_fetch=function(link_field,src_field,tar_field){if(!this.fetch_dict[link_field]){this.fetch_dict[link_field]={'columns':[],'fields':[]}}
this.fetch_dict[link_field].columns.push(src_field);this.fetch_dict[link_field].fields.push(tar_field);}
_f.Frm.prototype.set_print_heading=function(txt){this.pformat[cur_frm.docname]=txt;}
_f.Frm.prototype.action_perm_type_map={"Create":"create","Save":"write","Submit":"submit","Update":"submit","Cancel":"cancel","Amend":"amend","Delete":"delete"};_f.Frm.prototype.validate_form_action=function(action){var perm_to_check=this.action_perm_type_map[action];if(!this.perm[0][perm_to_check]){frappe.throw(__("No permission to '{0}' {1}",[__(action),__(this.doc.doctype)]));}};_f.Frm.prototype.get_handlers=function(fieldname,doctype,docname){return this.script_manager.get_handlers(fieldname,doctype||this.doctype,docname||this.docname)};get_server_fields=function(method,arg,table_field,doc,dt,dn,allow_edit,call_back){console.warn("This function 'get_server_fields' has been deprecated and will be removed soon.");frappe.dom.freeze();if($.isPlainObject(arg))arg=JSON.stringify(arg);return $c('runserverobj',args={'method':method,'docs':JSON.stringify(doc),'arg':arg},function(r,rt){frappe.dom.unfreeze();if(r.message){var d=locals[dt][dn];var field_dict=r.message;for(var key in field_dict){d[key]=field_dict[key];if(table_field)
refresh_field(key,d.name,table_field);else
refresh_field(key);}}
if(call_back){doc=locals[doc.doctype][doc.name];call_back(doc,dt,dn);}});}
set_multiple=function(dt,dn,dict,table_field){var d=locals[dt][dn];for(var key in dict){d[key]=dict[key];if(table_field)
refresh_field(key,d.name,table_field);else
refresh_field(key);}}
refresh_many=function(flist,dn,table_field){for(var i in flist){if(table_field)
refresh_field(flist[i],dn,table_field);else
refresh_field(flist[i]);}}
set_field_tip=function(n,txt){var df=frappe.meta.get_docfield(cur_frm.doctype,n,cur_frm.docname);if(df)df.description=txt;if(cur_frm&&cur_frm.fields_dict){if(cur_frm.fields_dict[n])
cur_frm.fields_dict[n].comment_area.innerHTML=replace_newlines(txt);else
console.log('[set_field_tip] Unable to set field tip: '+n);}}
refresh_field=function(n,docname,table_field){if(typeof n==typeof[])
refresh_many(n,docname,table_field);if(table_field&&cur_frm.fields_dict[table_field].grid.grid_rows_by_docname){cur_frm.fields_dict[table_field].grid.grid_rows_by_docname[docname].refresh_field(n);}else if(cur_frm){cur_frm.refresh_field(n)}}
set_field_options=function(n,txt){cur_frm.set_df_property(n,'options',txt)}
set_field_permlevel=function(n,level){cur_frm.set_df_property(n,'permlevel',level)}
toggle_field=function(n,hidden){var df=frappe.meta.get_docfield(cur_frm.doctype,n,cur_frm.docname);if(df){df.hidden=hidden;refresh_field(n);}
else{console.log((hidden?"hide_field":"unhide_field")+" cannot find field "+n);}}
hide_field=function(n){if(cur_frm){if(n.substr)toggle_field(n,1);else{for(var i in n)toggle_field(n[i],1)}}}
unhide_field=function(n){if(cur_frm){if(n.substr)toggle_field(n,0);else{for(var i in n)toggle_field(n[i],0)}}}
get_field_obj=function(fn){return cur_frm.fields_dict[fn];}
set_missing_values=function(doc,dict){var fields_to_set={};for(var i in dict){var v=dict[i];if(!doc[i]){fields_to_set[i]=v;}}
if(fields_to_set){set_multiple(doc.doctype,doc.name,fields_to_set);}}
_f.Frm.prototype.get_doc=function(){return locals[this.doctype][this.docname];}
_f.Frm.prototype.field_map=function(fnames,fn){if(typeof fnames==='string'){if(fnames=='*'){fnames=keys(this.fields_dict);}else{fnames=[fnames];}}
for(var i=0,l=fnames.length;i<l;i++){var fieldname=fnames[i];var field=frappe.meta.get_docfield(cur_frm.doctype,fieldname,cur_frm.docname);if(field){fn(field);cur_frm.refresh_field(fieldname);};}}
_f.Frm.prototype.get_docfield=function(fieldname1,fieldname2){if(fieldname2){var doctype=this.get_docfield(fieldname1).options;return frappe.meta.get_docfield(doctype,fieldname2,this.docname);}else{return frappe.meta.get_docfield(this.doctype,fieldname1,this.docname);}}
_f.Frm.prototype.set_df_property=function(fieldname,property,value){var field=this.get_docfield(fieldname);if(field){field[property]=value;this.refresh_field(fieldname);};}
_f.Frm.prototype.toggle_enable=function(fnames,enable){cur_frm.field_map(fnames,function(field){field.read_only=enable?0:1;});}
_f.Frm.prototype.toggle_reqd=function(fnames,mandatory){cur_frm.field_map(fnames,function(field){field.reqd=mandatory?true:false;});}
_f.Frm.prototype.toggle_display=function(fnames,show){cur_frm.field_map(fnames,function(field){field.hidden=show?0:1;});}
_f.Frm.prototype.call_server=function(method,args,callback){return $c_obj(cur_frm.doc,method,args,callback);}
_f.Frm.prototype.get_files=function(){return cur_frm.attachments?frappe.utils.sort(cur_frm.attachments.get_attachments(),"file_name","string"):[];}
_f.Frm.prototype.set_query=function(fieldname,opt1,opt2){if(opt2){this.fields_dict[opt1].grid.get_field(fieldname).get_query=opt2;}else{this.fields_dict[fieldname].get_query=opt1;}}
_f.Frm.prototype.set_value_if_missing=function(field,value){this.set_value(field,value,true);}
_f.Frm.prototype.clear_table=function(fieldname){frappe.model.clear_table(this.doc,fieldname);}
_f.Frm.prototype.add_child=function(fieldname,values){var doc=frappe.model.add_child(this.doc,frappe.meta.get_docfield(this.doctype,fieldname).options,fieldname);if(values){$.extend(doc,values);}
return doc;}
_f.Frm.prototype.set_value=function(field,value,if_missing){var me=this;var _set=function(f,v){var fieldobj=me.fields_dict[f];if(fieldobj){if(!if_missing||!frappe.model.has_value(me.doctype,me.doc.name,f)){if(fieldobj.df.fieldtype==="Table"&&$.isArray(v)){frappe.model.clear_table(me.doc,fieldobj.df.fieldname);for(var i=0,j=v.length;i<j;i++){var d=v[i];var child=frappe.model.add_child(me.doc,fieldobj.df.options,fieldobj.df.fieldname,i+1);$.extend(child,d);}
me.refresh_field(f);}else{frappe.model.set_value(me.doctype,me.doc.name,f,v);}}}else{msgprint("Field "+f+" not found.");throw"frm.set_value";}}
if(typeof field=="string"){_set(field,value)}else if($.isPlainObject(field)){for(var f in field){var v=field[f];if(me.get_field(f)){_set(f,v);}}}}
_f.Frm.prototype.call=function(opts){var me=this;if(!opts.doc){if(opts.method.indexOf(".")===-1)
opts.method=frappe.model.get_server_module_name(me.doctype)+"."+opts.method;opts.original_callback=opts.callback;opts.callback=function(r){if($.isPlainObject(r.message)){if(opts.child){opts.child=locals[opts.child.doctype][opts.child.name];$.extend(opts.child,r.message);me.fields_dict[opts.child.parentfield].refresh();}else{me.set_value(r.message);}}
opts.original_callback&&opts.original_callback(r);}}else{opts.original_callback=opts.callback;opts.callback=function(r){if(!r.exc)me.refresh_fields();opts.original_callback&&opts.original_callback(r);}}
return frappe.call(opts);}
_f.Frm.prototype.get_field=function(field){return cur_frm.fields_dict[field];};_f.Frm.prototype.new_doc=function(doctype,field,opts){frappe._from_link=field;frappe._from_link_scrollY=scrollY;new_doc(doctype,opts);}
_f.Frm.prototype.set_read_only=function(){var perm=[];var docperms=frappe.perm.get_perm(cur_frm.doc.doctype);for(var i=0,l=docperms.length;i<l;i++){var p=docperms[i];perm[p.permlevel||0]={read:1};}
cur_frm.perm=perm;}
_f.Frm.prototype.trigger=function(event){this.script_manager.trigger(event);};_f.Frm.prototype.get_formatted=function(fieldname){return frappe.format(this.doc[fieldname],frappe.meta.get_docfield(this.doctype,fieldname,this.docname),{no_icon:true},this.doc);}
_f.Frm.prototype.open_grid_row=function(){return frappe.ui.form.get_open_grid_form();}
_f.Frm.prototype.is_new=function(){return this.doc.__islocal;};frappe.provide("frappe.ui.form");frappe.ui.form.Toolbar=Class.extend({init:function(opts){$.extend(this,opts);this.make_menu();this.refresh();this.add_update_button_on_dirty();this.setup_editable_title();},refresh:function(){this.set_title();this.page.clear_user_actions();this.show_title_as_dirty();this.set_primary_action();this.refresh_star();if(this.frm.meta.hide_toolbar){this.page.hide_menu();}else{if(this.frm.doc.__islocal){this.page.hide_menu();this.print_icon&&this.print_icon.addClass("hide");this.star_icon&&this.star_icon.addClass("hide");}else{this.page.show_menu();this.print_icon&&this.print_icon.removeClass("hide");this.star_icon&&this.star_icon.removeClass("hide");}}},set_title:function(){if(this.frm.meta.title_field){var title=(this.frm.doc[this.frm.meta.title_field]||"").trim()||__(this.frm.docname);if(this.frm.doc.__islocal||title===this.frm.docname||this.frm.meta.autoname==="hash"){this.page.set_title_sub("");}else{this.page.set_title_sub(this.frm.docname);}}else{var title=__(this.frm.docname);}
var me=this;this.page.set_title(title);if(this.frm.meta.title_field){frappe.utils.set_title(title+" - "+this.frm.docname);}
this.page.$title_area.toggleClass("editable-title",!!(this.is_title_editable()||this.can_rename()));this.set_indicator();},is_title_editable:function(){if(this.frm.meta.title_field==="title"&&this.frm.perm[0].write&&!this.frm.get_docfield("title").options){return true;}else{return false;}},can_rename:function(){return this.frm.perm[0].write&&this.frm.meta.allow_rename;},setup_editable_title:function(){var me=this;this.page.$title_area.find(".title-text").on("click",function(){if(me.is_title_editable()){frappe.prompt({fieldname:"title",fieldtype:"Data",label:__("Title"),reqd:1,"default":me.frm.doc.title},function(data){if(data.title){me.frm.set_value("title",data.title);if(!me.frm.doc.__islocal){me.frm.save_or_update();}else{me.set_title();}}},__("Edit Title"),__("Update"));}
if(me.can_rename()){me.frm.rename_doc();}});},get_dropdown_menu:function(label){return this.page.add_dropdown(label);},set_indicator:function(){var indicator=frappe.get_indicator(this.frm.doc);if(indicator){this.page.set_indicator(indicator[0],indicator[1]);}else{this.page.clear_indicator();}},refresh_star:function(){this.star_icon&&this.star_icon.toggleClass("text-extra-muted not-starred",!frappe.ui.is_starred(this.frm.doc)).attr("data-doctype",this.frm.doctype).attr("data-name",this.frm.doc.name);},make_menu:function(){var me=this;var p=this.frm.perm[0];var docstatus=cint(this.frm.doc.docstatus);if(frappe.model.can_print(null,me.frm)){this.page.add_menu_item(__("Print"),function(){me.frm.print_doc();},true);this.print_icon=this.page.add_action_icon("icon-print",function(){me.frm.print_doc();});}
if(!this.frm.meta.issingle){this.star_icon=this.page.add_action_icon("icon-star",function(){frappe.ui.toggle_star(me.star_icon,me.frm.doctype,me.frm.doc.name);}).removeClass("text-muted").find(".icon-star").addClass("star-action");}
if(frappe.model.can_email(null,me.frm)){this.page.add_menu_item(__("Email"),function(){me.frm.email_doc();},true);}
if(!me.frm.meta.issingle){this.page.add_menu_item(__('Links'),function(){me.show_linked_with();},true)}
if(in_list(frappe.boot.user.can_create,me.frm.doctype)&&!me.frm.meta.allow_copy){this.page.add_menu_item(__("Duplicate"),function(){me.frm.copy_doc();},true);}
if(this.can_rename()){this.page.add_menu_item(__("Rename"),function(){me.frm.rename_doc();},true);}
this.page.add_menu_item(__("Reload"),function(){me.frm.reload_doc();},true);if((cint(me.frm.doc.docstatus)!=1)&&!me.frm.doc.__islocal&&frappe.model.can_delete(me.frm.doctype)){this.page.add_menu_item(__("Delete"),function(){me.frm.savetrash();},true);}
if(p[CREATE]&&!this.frm.meta.issingle){this.page.add_menu_item(__("New {0}",[__(me.frm.doctype)]),function(){new_doc(me.frm.doctype);},true);}},can_save:function(){return this.get_docstatus()===0;},can_submit:function(){return this.get_docstatus()===0&&!this.frm.doc.__islocal&&!this.frm.doc.__unsaved&&this.frm.perm[0].submit&&!this.has_workflow();},can_update:function(){return this.get_docstatus()===1&&!this.frm.doc.__islocal&&this.frm.perm[0].submit&&this.frm.doc.__unsaved},can_cancel:function(){return this.get_docstatus()===1&&this.frm.perm[0].cancel&&!this.read_only&&!this.has_workflow();},can_amend:function(){return this.get_docstatus()===2&&this.frm.perm[0].amend&&!this.read_only;},has_workflow:function(){if(this._has_workflow===undefined)
this._has_workflow=frappe.get_list("Workflow",{document_type:this.frm.doctype}).length;return this._has_workflow;},get_docstatus:function(){return cint(this.frm.doc.docstatus);},show_linked_with:function(){if(!this.frm.linked_with){this.frm.linked_with=new frappe.ui.form.LinkedWith({frm:this.frm});}
this.frm.linked_with.show();},set_primary_action:function(dirty){if(!dirty){this.page.clear_user_actions();}
var status=this.get_action_status();if(status){if(status!==this.current_status){this.set_page_actions(status);}}else{this.page.clear_actions();}},get_action_status:function(){var status=null;if(this.can_submit()){status="Submit";}else if(this.can_save()){if(!this.frm.save_disabled){status="Save";}}else if(this.can_update()){status="Update";}else if(this.can_cancel()){status="Cancel";}else if(this.can_amend()){status="Amend";}
return status;},set_page_actions:function(status){var me=this;this.page.clear_actions();var perm_to_check=this.frm.action_perm_type_map[status];if(!this.frm.perm[0][perm_to_check]){return;}
if(status=="Cancel"){this.page.set_secondary_action(__(status),function(){me.frm.savecancel(this);},"octicon octicon-circle-slash");}else{var click={"Save":function(){if(!frappe.dom.is_touchscreen()&&Math.random()<0.25){show_alert(__("ProTip: You can also use Ctrl+S to Save"));}
me.frm.save('Save',null,this);},"Submit":function(){me.frm.savesubmit(this);},"Update":function(){me.frm.save('Update',null,this);},"Amend":function(){me.frm.amend_doc();}}[status];var icon={"Save":"octicon octicon-check","Submit":"octicon octicon-lock","Update":"octicon octicon-check","Amend":"octicon octicon-split"}[status];this.page.set_primary_action(__(status),click,icon);}
this.current_status=status;},make_cancel_amend_button:function(){var me=this;var docstatus=cint(this.frm.doc.docstatus);var p=this.frm.perm[0];var has_workflow=this.has_workflow();if(has_workflow){return;}else if(docstatus==1&&p[CANCEL]){this.page.set_secondary_action('Cancel',function(){me.frm.savecancel(this)},'icon-ban-circle');}else if(docstatus==2&&p[AMEND]){this.page.set_secondary_action('Amend',function(){me.frm.amend_doc()},'icon-pencil',true);}},add_update_button_on_dirty:function(){var me=this;$(this.frm.wrapper).on("dirty",function(){me.show_title_as_dirty();me.frm.page.clear_actions_menu();if(!me.frm.save_disabled){me.set_primary_action(true);}});},show_title_as_dirty:function(){if(this.frm.save_disabled)
return;if(this.frm.doc.__unsaved){this.page.set_indicator(__("Not Saved"),"orange");}
$(this.frm.wrapper).attr("data-state",this.frm.doc.__unsaved?"dirty":"clean");}});frappe.ui.form.Dashboard=Class.extend({init:function(opts){$.extend(this,opts);this.wrapper=$('<div class="form-dashboard"></div>').prependTo(this.frm.layout.wrapper);this.body=$('<div class="row"></div>').appendTo(this.wrapper).css("padding","15px 30px");},reset:function(){this.wrapper.toggle(false);this.body.empty();this.headline=null;},set_headline:function(html){if(!this.headline)
this.headline=$('<h4 class="form-headline col-md-12"></h4>').prependTo(this.body);this.headline.html(html);this.wrapper.toggle(true);},set_headline_alert:function(text,alert_class,icon){if(!alert_class)alert_class="alert-warning";this.set_headline(repl('<div class="alert %(alert_class)s">%(icon)s%(text)s</div>',{"alert_class":alert_class||"","icon":icon?'<i class="'+icon+'" /> ':"","text":text}));},add_doctype_badge:function(doctype,fieldname){if(frappe.model.can_read(doctype)){this.add_badge(__(doctype),doctype,function(){frappe.route_options={};frappe.route_options[fieldname]=cur_frm.doc.name;frappe.set_route("List",doctype);}).attr("data-doctype",doctype);}},add_badge:function(label,doctype,onclick){var badge=$(repl('<div class="col-md-4">\
   <div class="alert-badge">\
    <a class="badge-link h6 text-muted">%(label)s\
    <span class="badge" style="margin-left: 10px; font-size: 12px;">-</span></a>\
   </div></div>',{label:label,icon:frappe.boot.doctype_icons[doctype]})).appendTo(this.body)
badge.find(".badge-link").click(onclick);this.wrapper.toggle(true);return badge.find(".alert-badge");},set_badge_count:function(data){var me=this;$.each(data,function(doctype,count){$(me.wrapper).find(".alert-badge[data-doctype='"+doctype+"'] .badge").html(cint(count));});},add_progress:function(title,percent){var progress_chart=this.make_progress_chart(title);if(!$.isArray(percent)){var width=cint(percent)<1?1:percent;var progress_class="";if(width<10)
progress_class="progress-bar-danger";if(width>99.9)
progress_class="progress-bar-success";percent=[{title:title,width:width,progress_class:progress_class}];}
var progress=$('<div class="progress"></div>').appendTo(progress_chart);$.each(percent,function(i,opts){$(repl('<div class="progress-bar %(progress_class)s" style="width: %(width)s%" \
    title="%(title)s"></div>',opts)).appendTo(progress);});this.wrapper.toggle(true);},make_progress_chart:function(title){var progress_area=this.body.find(".progress-area");if(!progress_area.length){progress_area=$('<div class="progress-area" style="margin-top: 10px">').appendTo(this.body);}
var progress_chart=$('<div class="progress-chart" title="'+title+'"></div>').appendTo(progress_area);var n_charts=progress_area.find(".progress-chart").length,cols=Math.floor(12/n_charts);progress_area.find(".progress-chart").removeClass().addClass("progress-chart col-md-"+cols);return progress_chart;}});;frappe.provide("frappe.ui.form");frappe.ui.form.save=function(frm,action,callback,btn){$(btn).prop("disabled",true);var working_label={"Save":__("Saving"),"Submit":__("Submitting"),"Update":__("Updating"),"Amend":__("Amending"),"Cancel":__("Cancelling")}[toTitle(action)];var freeze_message=working_label?__(working_label):"";var save=function(){check_name(function(){if(check_mandatory()){_call({method:"frappe.desk.form.save.savedocs",args:{doc:frm.doc,action:action},callback:function(r){$(document).trigger("save",[frm.doc]);callback(r);},btn:btn,freeze_message:freeze_message});}else{$(btn).prop("disabled",false);}});};var cancel=function(){var args={doctype:frm.doc.doctype,name:frm.doc.name};var workflow_state_fieldname=frappe.workflow.get_state_fieldname(frm.doctype);if(workflow_state_fieldname){$.extend(args,{workflow_state_fieldname:workflow_state_fieldname,workflow_state:frm.doc[workflow_state_fieldname]});}
_call({method:"frappe.desk.form.save.cancel",args:args,callback:function(r){$(document).trigger("save",[frm.doc]);callback(r);},btn:btn,freeze_message:freeze_message});};var check_name=function(callback){var doc=frm.doc;var meta=locals.DocType[doc.doctype];if(doc.__islocal&&(meta&&meta.autoname&&meta.autoname.toLowerCase()=='prompt')){var d=frappe.prompt(__("Name"),function(values){var newname=values.value;if(newname){doc.__newname=strip(newname);}else{msgprint(__("Name is required"));throw"name required";}
callback();},__('Enter the name of the new {0}',[doc.doctype]),__("Create"));if(doc.__newname){d.set_value("value",doc.__newname);}
d.onhide=function(){$(btn).prop("disabled",false);}}else{callback();}};var check_mandatory=function(){var me=this;var has_errors=false;frm.scroll_set=false;if(frm.doc.docstatus==2)return true;$.each(frappe.model.get_all_docs(frm.doc),function(i,doc){var error_fields=[];var folded=false;$.each(frappe.meta.docfield_list[doc.doctype]||[],function(i,docfield){if(docfield.fieldname){var df=frappe.meta.get_docfield(doc.doctype,docfield.fieldname,frm.doc.name);if(df.fieldtype==="Fold"){folded=frm.layout.folded;}
if(df.reqd&&!frappe.model.has_value(doc.doctype,doc.name,df.fieldname)){has_errors=true;error_fields[error_fields.length]=__(df.label);if(!me.scroll_set){scroll_to(doc.parentfield||df.fieldname);}
if(folded){frm.layout.unfold();folded=false;}}}});if(error_fields.length)
msgprint(__('Mandatory fields required in {0}',[(doc.parenttype?(__(frappe.meta.docfield_map[doc.parenttype][doc.parentfield].label)+' ('+__("Table")+')'):__(doc.doctype))])+'\n'+error_fields.join('\n'));});return!has_errors;};var scroll_to=function(fieldname){var f=cur_frm.fields_dict[fieldname];if(f){$(document).scrollTop($(f.wrapper).offset().top-60);}
frm.scroll_set=true;};var _call=function(opts){$(opts.btn).prop("disabled",true);if(frappe.ui.form.is_saving){msgprint(__("Already saving. Please wait a few moments."));throw"saving";}
frappe.ui.form.is_saving=true;return frappe.call({freeze:true,freeze_message:opts.freeze_message,method:opts.method,args:opts.args,btn:opts.btn,callback:function(r){opts.callback&&opts.callback(r);},always:function(){frappe.ui.form.is_saving=false;}})};if(action==="cancel"){cancel();}else{save();}};frappe.provide("frappe.ui.form.handlers");frappe.ui.form.on=frappe.ui.form.on_change=function(doctype,fieldname,handler){var add_handler=function(fieldname,handler){if(!frappe.ui.form.handlers[doctype]){frappe.ui.form.handlers[doctype]={};}
if(!frappe.ui.form.handlers[doctype][fieldname]){frappe.ui.form.handlers[doctype][fieldname]=[];}
frappe.ui.form.handlers[doctype][fieldname].push(handler);if(cur_frm&&cur_frm.doctype===doctype)
cur_frm.events[fieldname]=handler;}
if(!handler&&$.isPlainObject(fieldname)){for(var key in fieldname){var fn=fieldname[key];if(typeof fn==="function"){add_handler(key,fn);}}}else{add_handler(fieldname,handler);}}
frappe.ui.form.trigger=function(doctype,fieldname,callback){cur_frm.script_manager.trigger(fieldname,doctype,null,callback);}
frappe.ui.form.ScriptManager=Class.extend({init:function(opts){$.extend(this,opts);},make:function(ControllerClass){this.frm.cscript=$.extend(this.frm.cscript,new ControllerClass({frm:this.frm}));},trigger:function(event_name,doctype,name,callback){var me=this;doctype=doctype||this.frm.doctype;name=name||this.frm.docname;handlers=this.get_handlers(event_name,doctype,name,callback);if(callback)handlers.push(callback);return $.when.apply($,$.map(handlers,function(fn){return fn();}));},get_handlers:function(event_name,doctype,name,callback){var handlers=[];var me=this;if(frappe.ui.form.handlers[doctype]&&frappe.ui.form.handlers[doctype][event_name]){$.each(frappe.ui.form.handlers[doctype][event_name],function(i,fn){handlers.push(function(){return fn(me.frm,doctype,name)});});}
if(this.frm.cscript[event_name]){handlers.push(function(){return me.frm.cscript[event_name](me.frm.doc,doctype,name);});}
if(this.frm.cscript["custom_"+event_name]){handlers.push(function(){return me.frm.cscript["custom_"+event_name](me.frm.doc,doctype,name);});}
return handlers;},setup:function(){var doctype=this.frm.meta;var me=this;var cs=doctype.__js;if(cs){var tmp=eval(cs);}
$.each(this.frm.fields,function(i,field){var df=field.df;if((df.fieldtype==="Read Only"||df.read_only==1)&&df.options&&df.options.indexOf(".")!=-1){var parts=df.options.split(".");me.frm.add_fetch(parts[0],parts[1],df.fieldname);}});doctype.__css&&frappe.dom.set_style(doctype.__css);},log_error:function(caller,e){show_alert("Error in Client Script.");console.group&&console.group();console.log("----- error in client script -----");console.log("method: "+caller);console.log(e);console.log("error message: "+e.message);console.trace&&console.trace();console.log("----- end of error message -----");console.group&&console.groupEnd();},validate_link_and_fetch:function(df,doctype,docname,value,callback){var me=this;if(value){var fetch='';if(this.frm&&this.frm.fetch_dict[df.fieldname])
fetch=this.frm.fetch_dict[df.fieldname].columns.join(', ');return frappe.call({method:'frappe.desk.form.utils.validate_link',type:"GET",args:{'value':value,'options':doctype,'fetch':fetch},no_spinner:true,callback:function(r){if(r.message=='Ok'){if(r.fetch_values)
me.set_fetch_values(df,docname,r.fetch_values);if(callback)callback(value);}else{if(callback)callback("");}}});}else if(callback){callback(value);}},set_fetch_values:function(df,docname,fetch_values){var fl=this.frm.fetch_dict[df.fieldname].fields;for(var i=0;i<fl.length;i++){frappe.model.set_value(df.parent,docname,fl[i],fetch_values[i],df.fieldtype);}},copy_from_first_row:function(parentfield,current_row,fieldnames){var doclist=this.frm.doc[parentfield];if(doclist.length===1||doclist[0]===current_row)return;$.each(fieldnames,function(i,fieldname){current_row[fieldname]=doclist[0][fieldname];});}});;frappe.templates["grid_form"] = '<div class="grid-form-heading sortable-handle"> <div class="toolbar"> <span class="panel-title"> {%= __("Editing Row") %} #<span class="grid-form-row-index"></span></span> <button class="btn btn-success btn-xs pull-right" style="margin-left: 7px;"> <i class="octicon octicon-check visible-xs" style="padding-bottom: 2px;"></i> <span class="hidden-xs">{%= __("Done") %}</span></button> <button class="btn btn-default btn-xs pull-right grid-insert-row" style="margin-left: 7px;"> {%= __("Insert Above") %}</button> <button class="btn btn-danger btn-xs pull-right grid-delete-row"> <i class="octicon octicon-trashcan visible-xs" style="padding-bottom: 2px; margin-top: 1px;"></i> <span class="hidden-xs">{%= __("Remove") %}</span></button> </div> </div> <div class="grid-form-body"> <div class="form-area"></div> <div class="grid-footer-toolbar clearfix hidden-xs"> <span class="text-muted"> <i class="octicon octicon-keyboard"></i> &ndash; <kbd>{%= __("Ctrl + Up") %}</kbd>, <kbd>{%= __("Ctrl + Down") %}</kbd>, <kbd>{%= __("ESC") %}</kbd> </span> <button class="btn btn-default btn-xs pull-right grid-append-row" style="margin-left: 7px;"> {%= __("Insert Below") %}</button> </div> </div> ';
frappe.templates["grid_body"] = '<div> <div class="form-grid"> <div class="grid-heading-row"></div> <div class="grid-body"> <div class="rows"></div> <div class="grid-empty text-center hide">{%= __("No Data") %}</div> <div class="small form-clickable-section grid-footer"> <div class="row"> <div class="col-sm-6"> <a href="#" class="btn btn-xs btn-default grid-add-row"> {%= __("Add new row") %}</a> <a href="#" class="grid-add-multiple-rows btn btn-xs btn-default hide" style="margin-left: 10px;"> {%= __("Add multiple rows") %}</a> </div> <div class="col-sm-6 text-right"> <a href="#" class="grid-download btn btn-xs btn-default hide" style="margin-left: 10px;"> {%= __("Download") %}</a> <a href="#" class="grid-upload btn btn-xs btn-default hide" style="margin-left: 10px;"> {%= __("Upload") %}</a> </div> </div> </div> </div> </div> </div> ';
frappe.ui.form.get_open_grid_form=function(){return $(".grid-row-open").data("grid_row");}
frappe.ui.form.close_grid_form=function(){var open_form=frappe.ui.form.get_open_grid_form();open_form&&open_form.hide_form();}
frappe.ui.form.Grid=Class.extend({init:function(opts){$.extend(this,opts);this.fieldinfo={};this.doctype=this.df.options;this.template=null;if(this.frm.meta.__form_grid_templates&&this.frm.meta.__form_grid_templates[this.df.fieldname]){this.template=this.frm.meta.__form_grid_templates[this.df.fieldname];}
this.is_grid=true;},make:function(){var me=this;this.wrapper=$(frappe.render_template("grid_body",{})).appendTo(this.parent).attr("data-fieldname",this.df.fieldname);$(this.wrapper).find(".grid-add-row").click(function(){me.add_new_row(null,null,true);return false;});this.setup_allow_bulk_edit();},make_head:function(){this.header_row=new frappe.ui.form.GridRow({parent:$(this.parent).find(".grid-heading-row"),parent_df:this.df,docfields:this.docfields,frm:this.frm,grid:this});},refresh:function(force){!this.wrapper&&this.make();var me=this,$rows=$(me.parent).find(".rows"),data=this.get_data();if(this.frm&&this.frm.docname){this.df=frappe.meta.get_docfield(this.frm.doctype,this.df.fieldname,this.frm.docname);}else{this.df=frappe.meta.get_docfield(this.df.options,this.df.fieldname);}
this.docfields=frappe.meta.get_docfields(this.doctype,this.frm.docname);this.display_status=frappe.perm.get_field_display_status(this.df,this.frm.doc,this.perm);if(this.display_status==="None")return;if(!force&&this.data_rows_are_same(data)){this.header_row&&this.header_row.refresh();for(var i in this.grid_rows){this.grid_rows[i].refresh();}}else{var _scroll_y=window.scrollY;this.wrapper.find(".grid-row").remove();this.make_head();this.grid_rows=[];this.grid_rows_by_docname={};for(var ri in data){var d=data[ri];var grid_row=new frappe.ui.form.GridRow({parent:$rows,parent_df:this.df,docfields:this.docfields,doc:d,frm:this.frm,grid:this});this.grid_rows.push(grid_row)
this.grid_rows_by_docname[d.name]=grid_row;}
this.wrapper.find(".grid-empty").toggleClass("hide",!!data.length);if(this.is_editable()){this.wrapper.find(".grid-footer").toggle(true);this.wrapper.find(".grid-add-row, .grid-add-multiple-rows").toggle(!this.cannot_add_rows);this.make_sortable($rows);}else{this.wrapper.find(".grid-footer").toggle(false);}
this.last_display_status=this.display_status;this.last_docname=this.frm.docname;scroll(0,_scroll_y);}},refresh_row:function(docname){this.grid_rows_by_docname[docname]&&this.grid_rows_by_docname[docname].refresh();},data_rows_are_same:function(data){if(this.grid_rows){var same=data.length==this.grid_rows.length&&this.display_status==this.last_display_status&&this.frm.docname==this.last_docname&&!$.map(this.grid_rows,function(g,i){return(g.doc&&g.doc.name==data[i].name)?null:true;}).length;return same;}},make_sortable:function($rows){var me=this;if('ontouchstart'in window){return;}
new Sortable($rows.get(0),{handle:".sortable-handle",onUpdate:function(event,ui){me.frm.doc[me.df.fieldname]=[];$rows.find(".grid-row").each(function(i,item){var doc=$(item).data("doc");doc.idx=i+1;$(this).find(".row-index").html(i+1);me.frm.doc[me.df.fieldname].push(doc);});me.frm.dirty();}});},get_data:function(){var data=this.frm.doc[this.df.fieldname]||[];data.sort(function(a,b){return a.idx-b.idx});return data;},set_column_disp:function(fieldname,show){if($.isArray(fieldname)){var me=this;for(var i=0,l=fieldname.length;i<l;i++){var fname=fieldname[i];me.get_docfield(fname).hidden=show?0:1;}}else{this.get_docfield(fieldname).hidden=show?0:1;}
this.refresh(true);},toggle_reqd:function(fieldname,reqd){this.get_docfield(fieldname).reqd=reqd;this.refresh();},get_docfield:function(fieldname){return frappe.meta.get_docfield(this.doctype,fieldname,this.frm?this.frm.docname:null);},get_field:function(fieldname){if(!this.fieldinfo[fieldname])
this.fieldinfo[fieldname]={}
return this.fieldinfo[fieldname];},set_value:function(fieldname,value,doc){if(this.display_status!=="None")
this.grid_rows_by_docname[doc.name].refresh_field(fieldname);},add_new_row:function(idx,callback,show){if(this.is_editable()){var d=frappe.model.add_child(this.frm.doc,this.df.options,this.df.fieldname,idx);this.frm.script_manager.trigger(this.df.fieldname+"_add",d.doctype,d.name);this.refresh();if(show){if(idx){this.wrapper.find("[data-idx='"+idx+"']").data("grid_row").toggle_view(true,callback);}else{this.wrapper.find(".grid-row:last").data("grid_row").toggle_view(true,callback);}}
return d;}},is_editable:function(){return this.display_status=="Write"&&!this.static_rows},set_multiple_add:function(link,qty){if(this.multiple_set)return;var me=this;var link_field=frappe.meta.get_docfield(this.df.options,link);$(this.wrapper).find(".grid-add-multiple-rows").removeClass("hide").on("click",function(){new frappe.ui.form.LinkSelector({doctype:link_field.options,fieldname:link,qty_fieldname:qty,target:me,txt:""});return false;});this.multiple_set=true;},setup_allow_bulk_edit:function(){var me=this;if(this.frm.get_docfield(this.df.fieldname).allow_bulk_edit){me.setup_download();$(this.wrapper).find(".grid-upload").removeClass("hide").on("click",function(){frappe.prompt({fieldtype:"Attach",label:"Upload File"},function(data){var data=frappe.utils.csv_to_array(frappe.upload.get_string(data.upload_file));var fieldnames=data[2];me.frm.clear_table(me.df.fieldname);$.each(data,function(i,row){if(i>4){var blank_row=true;$.each(row,function(ci,value){if(value){blank_row=false;return false;}});if(!blank_row){var d=me.frm.add_child(me.df.fieldname);$.each(row,function(ci,value){d[fieldnames[ci]]=value;});}}});me.frm.refresh_field(me.df.fieldname);},__("Edit via Upload"),__("Update"));return false;});}},setup_download:function(){var me=this;$(this.wrapper).find(".grid-download").removeClass("hide").on("click",function(){var data=[];data.push([__("Bulk Edit {0}",[me.df.label])]);data.push([]);data.push([]);data.push([]);data.push(["------"]);$.each(frappe.get_meta(me.df.options).fields,function(i,df){if(frappe.model.is_value_type(df.fieldtype)){data[1].push(df.label);data[2].push(df.fieldname);data[3].push(df.description||"");}});$.each(me.frm.doc[me.df.fieldname]||[],function(i,d){row=[];$.each(data[2],function(i,fieldname){row.push(d[fieldname]||"");});data.push(row);});frappe.tools.downloadify(data,null,me.df.label);return false;});}});frappe.ui.form.GridRow=Class.extend({init:function(opts){$.extend(this,opts);this.make();},make:function(){var me=this;this.wrapper=$('<div class="grid-row"></div>').appendTo(this.parent).data("grid_row",this);this.row=$('<div class="data-row row sortable-handle"></div>').appendTo(this.wrapper).on("click",function(){me.toggle_view();return false;});this.set_row_index();this.make_static_display();if(this.doc){this.set_data();}},set_row_index:function(){if(this.doc){this.wrapper.attr("data-idx",this.doc.idx).find(".row-index, .grid-form-row-index").html(this.doc.idx)}},remove:function(){if(this.grid.is_editable()){if(this.get_open_form()){this.hide_form();}
this.frm.script_manager.trigger("before_"+this.grid.df.fieldname+"_remove",this.doc.doctype,this.doc.name);this.wrapper.toggle(false);frappe.model.clear_doc(this.doc.doctype,this.doc.name);this.frm.script_manager.trigger(this.grid.df.fieldname+"_remove",this.doc.doctype,this.doc.name);this.frm.dirty();this.grid.refresh();}},insert:function(show){var idx=this.doc.idx;this.toggle_view(false);this.grid.add_new_row(idx,null,show);},refresh:function(){if(this.doc)
this.doc=locals[this.doc.doctype][this.doc.name];this.grid.static_display_template=null;this.make_static_display();if(this.get_open_form()){this.layout&&this.layout.refresh(this.doc);}},make_static_display:function(){var me=this;this.row.empty();$('<div class="row-index">'+(this.doc?this.doc.idx:"&nbsp;")+'</div>').appendTo(this.row);if(this.grid.template){$('<div class="row-data">').appendTo(this.row).html(frappe.render(this.grid.template,{doc:this.doc?frappe.get_format_helper(this.doc):null,frm:this.frm,row:this}));}else{this.add_visible_columns();}
$(this.frm.wrapper).trigger("grid-row-render",[this]);},add_visible_columns:function(){this.make_static_display_template();for(var ci in this.static_display_template){var df=this.static_display_template[ci][0];var colsize=this.static_display_template[ci][1];var txt=this.doc?frappe.format(this.doc[df.fieldname],df,null,this.doc):__(df.label);if(this.doc&&df.fieldtype==="Select"){txt=__(txt);}
var add_class=(["Text","Small Text"].indexOf(df.fieldtype)===-1)?" grid-overflow-ellipsis":" grid-overflow-no-ellipsis";add_class+=(["Int","Currency","Float","Percent"].indexOf(df.fieldtype)!==-1)?" text-right":"";$col=$('<div class="col col-xs-'+colsize+add_class+' grid-static-col"></div>').html(txt).attr("data-fieldname",df.fieldname).data("df",df).appendTo(this.row)}},make_static_display_template:function(){if(this.static_display_template)return;var total_colsize=1;this.static_display_template=[];for(var ci in this.docfields){var df=this.docfields[ci];if(!df.hidden&&df.in_list_view&&this.grid.frm.get_perm(df.permlevel,"read")&&!in_list(frappe.model.layout_fields,df.fieldtype)){var colsize=2;switch(df.fieldtype){case"Text":case"Small Text":colsize=3;break;case"Check":colsize=1;break;}
total_colsize+=colsize
if(total_colsize>12)
return false;this.static_display_template.push([df,colsize]);}}
var passes=0;while(total_colsize<12&&passes<12){for(var i in this.static_display_template){var df=this.static_display_template[i][0];var colsize=this.static_display_template[i][1];if(colsize>1&&colsize<12&&!in_list(frappe.model.std_fields_list,df.fieldname)){if(passes<3&&["Int","Currency","Float","Check","Percent"].indexOf(df.fieldtype)!==-1){continue;}
this.static_display_template[i][1]+=1;total_colsize++;}
if(total_colsize>=12)
break;}
passes++;}},get_open_form:function(){return frappe.ui.form.get_open_grid_form();},toggle_view:function(show,callback){if(!this.doc)return this;this.doc=locals[this.doc.doctype][this.doc.name];var open_row=this.get_open_form();this.fields=[];this.fields_dict={};if(show===undefined)show=!!!open_row;document.activeElement&&document.activeElement.blur();if(show&&open_row){if(open_row==this){callback&&callback();return;}else{open_row.toggle_view(false);}}
if(show){this.show_form();}else{this.hide_form();}
callback&&callback();return this;},show_form:function(){var me=this;if(!this.form_panel){this.form_panel=$('<div class="form-in-grid"></div>').appendTo(this.wrapper);}
this.render_form();this.row.toggle(false);frappe.dom.freeze("","dark");if(this.frm.doc.docstatus===0){var first=this.form_area.find(":input:first");if(first.length&&!in_list(["Date","Datetime","Time"],first.attr("data-fieldtype"))){try{first.get(0).focus();}catch(e){console.log("Dialog: unable to focus on first input: "+e);}}}
cur_frm.cur_grid=this;this.wrapper.addClass("grid-row-open");frappe.ui.scroll(this.wrapper,true,15);me.frm.script_manager.trigger(me.doc.parentfield+"_on_form_rendered");},hide_form:function(){frappe.dom.unfreeze();this.row.toggle(true);this.make_static_display();cur_frm.cur_grid=null;this.wrapper.removeClass("grid-row-open");},open_prev:function(){if(this.grid.grid_rows[this.doc.idx-2]){this.grid.grid_rows[this.doc.idx-2].toggle_view(true);}},open_next:function(){if(this.grid.grid_rows[this.doc.idx]){this.grid.grid_rows[this.doc.idx].toggle_view(true);}else{this.grid.add_new_row(null,null,true);}},toggle_add_delete_button_display:function($parent){$parent.find(".grid-delete-row, .grid-insert-row, .grid-append-row").toggle(this.grid.is_editable());},render_form:function(){var me=this;this.make_form();this.form_area.empty();this.layout=new frappe.ui.form.Layout({fields:this.docfields,body:this.form_area,no_submit_on_enter:true,frm:this.frm,});this.layout.make();this.fields=this.layout.fields;this.fields_dict=this.layout.fields_dict;this.layout.refresh(this.doc);for(var fieldname in(this.grid.fieldinfo||{})){var fi=this.grid.fieldinfo[fieldname];$.extend(me.fields_dict[fieldname],fi);}
this.toggle_add_delete_button_display(this.wrapper);this.grid.open_grid_row=this;},make_form:function(){if(!this.form_area){$(frappe.render_template("grid_form",{grid:this})).appendTo(this.form_panel);this.form_area=this.wrapper.find(".form-area");this.set_row_index();this.set_form_events();}},set_form_events:function(){var me=this;this.form_panel.find(".grid-delete-row").click(function(){me.remove();return false;})
this.form_panel.find(".grid-insert-row").click(function(){me.insert(true);return false;})
this.form_panel.find(".grid-append-row").click(function(){me.toggle_view(false);me.grid.add_new_row(me.doc.idx+1,null,true);return false;})
this.form_panel.find(".grid-form-heading, .grid-footer-toolbar").on("click",function(){me.toggle_view();return false;});},set_data:function(){this.wrapper.data({"doc":this.doc})},refresh_field:function(fieldname){var $col=this.row.find("[data-fieldname='"+fieldname+"']");if($col.length){$col.html(frappe.format(this.doc[fieldname],this.grid.get_docfield(fieldname),null,this.frm.doc));}
if(this.fields_dict&&this.fields_dict[fieldname]){this.fields_dict[fieldname].refresh();this.layout.refresh_dependency();}},get_visible_columns:function(blacklist){var me=this;var visible_columns=$.map(this.docfields,function(df){var visible=!df.hidden&&df.in_list_view&&me.grid.frm.get_perm(df.permlevel,"read")&&!in_list(frappe.model.layout_fields,df.fieldtype)&&!in_list(blacklist,df.fieldname);return visible?df:null;});return visible_columns;},toggle_reqd:function(fieldname,reqd){var field=this.fields_dict[fieldname];field.df.reqd=reqd?1:0;field.refresh();this.layout.refresh_sections();},toggle_display:function(fieldname,show){var field=this.fields_dict[fieldname];field.df.hidden=show?0:1;field.refresh();this.layout.refresh_sections();}});;frappe.provide("frappe.ui.form");frappe.ui.form.LinkedWith=Class.extend({init:function(opts){var me=this;$.extend(this,opts);},show:function(){if(!this.dialog)
this.make_dialog();this.dialog.show();},make_dialog:function(){var me=this;this.linked_with=this.frm.meta.__linked_with;var links=[];$.each(this.linked_with,function(doctype,tmp){if(frappe.model.can_get_report(doctype)){links.push({label:__(doctype),value:doctype});}});links=frappe.utils.sort(links,"label");this.dialog=new frappe.ui.Dialog({hide_on_page_refresh:true,title:__("Linked With"),fields:[{fieldtype:"HTML",label:"list"}]});this.dialog.$wrapper.find(".modal-dialog").addClass("linked-with-dialog");if(!links){this.dialog.fields_dict.list.$wrapper.html("<div class='alert alert-warning'>"
+this.frm.doctype+": "
+(this.linked_with?__("Not Linked to any record."):__("Not enough permission to see links."))
+"</div>")
return;}
this.dialog.on_page_show=function(){me.dialog.fields_dict.list.$wrapper.html('<div class="text-muted text-center">'
+__("Loading")+'...</div>');frappe.call({method:"frappe.desk.form.utils.get_linked_docs",args:{doctype:me.frm.doctype,name:me.frm.docname,metadata_loaded:keys(locals.DocType)},callback:function(r){var parent=me.dialog.fields_dict.list.$wrapper.empty();if(keys(r.message||{}).length){$.each(keys(r.message).sort(),function(i,doctype){var listview=frappe.views.get_listview(doctype,me);listview.no_delete=true;var wrapper=$('<div class="panel panel-default"><div>').appendTo(parent);$('<div class="panel-heading">').html(__(doctype).bold()).appendTo(wrapper);var body=$('<div class="panel-body">').appendTo(wrapper);$.each(r.message[doctype],function(i,d){d.doctype=doctype;listview.render($('<div class="list-row"></div>').appendTo(body),d,me);})})}else{parent.html(__("Not Linked to any record."));}}})}},});;frappe.ui.form.States=Class.extend({init:function(opts){$.extend(this,opts);this.state_fieldname=frappe.workflow.get_state_fieldname(this.frm.doctype);if(!this.state_fieldname)
return;this.update_fields=frappe.workflow.get_update_fields(this.frm.doctype);var me=this;$(this.frm.wrapper).bind("render_complete",function(){me.refresh();});},setup_help:function(){var me=this;this.frm.page.add_action_item(__("Help"),function(){frappe.workflow.setup(me.frm.doctype);var state=me.get_state();var d=new frappe.ui.Dialog({title:"Workflow: "
+frappe.workflow.workflows[me.frm.doctype].name})
var next_html=$.map(frappe.workflow.get_transitions(me.frm.doctype,state),function(d){return d.action.bold()+__(" by Role ")+d.allowed;}).join(", ")||__("None: End of Workflow").bold();$(d.body).html("<p>"+__("Current status")+": "+state.bold()+"</p>"
+"<p>"+__("Document is only editable by users of role")+": "
+frappe.workflow.get_document_state(me.frm.doctype,state).allow_edit.bold()+"</p>"
+"<p>"+__("Next actions")+": "+next_html+"</p>"
+(me.frm.doc.__islocal?("<div class='alert alert-info'>"
+__("Workflow will start after saving.")+"</div>"):"")
+"<p class='help'>"+__("Note: Other permission rules may also apply")+"</p>").css({padding:'15px'});d.show();},true);},refresh:function(){if(this.frm.doc.__islocal){this.set_default_state();return;}
var state=this.get_state();if(state){this.show_actions(state);}},show_actions:function(state){var added=false,me=this;this.frm.page.clear_actions_menu();if(this.frm.doc.__unsaved===1){return;}
$.each(frappe.workflow.get_transitions(this.frm.doctype,state),function(i,d){if(in_list(user_roles,d.allowed)){added=true;me.frm.page.add_action_item(__(d.action),function(){var action=d.action;var doc_before_action=copy_dict(me.frm.doc);var next_state=frappe.workflow.get_next_state(me.frm.doctype,me.frm.doc[me.state_fieldname],action);me.frm.doc[me.state_fieldname]=next_state;var new_state=frappe.workflow.get_document_state(me.frm.doctype,next_state);var new_docstatus=cint(new_state.doc_status);if(new_state.update_field){me.frm.set_value(new_state.update_field,new_state.update_value);}
var on_error=function(){frappe.model.add_to_locals(doc_before_action);me.frm.refresh();}
var success=function(){me.frm.comments.insert_comment("Workflow",next_state);}
if(new_docstatus==1&&me.frm.doc.docstatus==0){me.frm.savesubmit(null,success,on_error);}else if(new_docstatus==0&&me.frm.doc.docstatus==0){me.frm.save("Save",success,null,on_error);}else if(new_docstatus==1&&me.frm.doc.docstatus==1){me.frm.save("Update",success,null,on_error);}else if(new_docstatus==2&&me.frm.doc.docstatus==1){me.frm.savecancel(null,success,on_error);}else{msgprint(__("Document Status transition from ")+me.frm.doc.docstatus+" "
+__("to")+
new_docstatus+" "+__("is not allowed."));msgprint(__("Document Status transition from {0} to {1} is not allowed",[me.frm.doc.docstatus,new_docstatus]));return false;}
return false;});}});if(added){this.frm.page.btn_primary.addClass("hide");this.frm.toolbar.current_status="";this.setup_help();}},set_default_state:function(){var default_state=frappe.workflow.get_default_state(this.frm.doctype,this.frm.doc.docstatus);if(default_state){this.frm.set_value(this.state_fieldname,default_state);}},get_state:function(){if(!this.frm.doc[this.state_fieldname]){this.set_default_state();}
return this.frm.doc[this.state_fieldname];},bind_action:function(){var me=this;this.dropdown.on("click","[data-action]",function(){})}});;frappe.templates["print_layout"] = '<div class="form-print-wrapper"> <div class="print-toolbar row"> <div class="col-xs-3"> <select class="print-preview-select input-sm form-control"></select></div> <div class="col-xs-3"> <div class="checkbox small" style="margin-top: 7px; margin-bottom: 0px;"> <label> <input type="checkbox" class="print-letterhead text-muted" style="margin-top: 1px;"/> {%= __("Letter Head") %}</label> </div> </div> <div class="col-xs-6 text-right"> <a class="close btn-print-close" style="margin-top: 2px; margin-left: 10px;">&times;</a> <div class="btn-group"> <a class="btn-print-print btn-sm btn btn-default"> <strong>{%= __("Print") %}</strong></a> <a class="btn-print-edit btn-sm btn btn-default"> {%= __("Edit") %}</a> <a class="btn-print-preview btn-sm btn btn-default"> {%= __("Full Page") %}</a> <a class="btn-download-pdf btn-sm btn btn-default"> {%= __("PDF") %}</a> </div> </div> </div> <div class="print-preview-wrapper"> <div class="print-preview"> <div class="print-format"></div> </div> </div> </div> ';
frappe.provide("frappe.ui.form");frappe.ui.form.PrintPreview=Class.extend({init:function(opts){$.extend(this,opts);this.make();this.bind_events();},make:function(){this.wrapper=this.frm.page.add_view("print",frappe.render_template("print_layout",{}));this.wrapper.find(".btn-print-edit").toggle(frappe.user.has_role("System Manager"));},bind_events:function(){var me=this;this.wrapper.find(".btn-print-close").click(function(){me.frm.hide_print();});this.print_formats=frappe.meta.get_print_formats(this.frm.meta.name);this.print_letterhead=this.wrapper.find(".print-letterhead").on("change",function(){me.print_sel.trigger("change");}).prop("checked",cint((frappe.model.get_doc(":Print Settings","Print Settings")||{with_letterhead:1}).with_letterhead)?true:false);this.print_sel=this.wrapper.find(".print-preview-select").on("change",function(){if(me.is_old_style()){me.wrapper.find(".btn-download-pdf").toggle(false);me.set_style();me.preview_old_style();}else{me.wrapper.find(".btn-download-pdf").toggle(true);me.preview();}});this.wrapper.find(".btn-print-print").click(function(){if(me.is_old_style()){me.print_old_style();}else{me.printit();}});this.wrapper.find(".btn-print-preview").click(function(){if(me.is_old_style()){me.new_page_preview_old_style();}else{me.new_page_preview();}});this.wrapper.find(".btn-download-pdf").click(function(){if(!me.is_old_style()){var w=window.open("/api/method/frappe.templates.pages.print.download_pdf?"
+"doctype="+encodeURIComponent(me.frm.doc.doctype)
+"&name="+encodeURIComponent(me.frm.doc.name)
+"&format="+me.selected_format()
+"&no_letterhead="+(me.with_letterhead()?"0":"1"));if(!w){msgprint(__("Please enable pop-ups"));return;}}});this.wrapper.find(".btn-print-edit").on("click",function(){var print_format=me.get_print_format();if(print_format&&print_format.name){if(print_format.print_format_builder){frappe.route_options={"doc":print_format,"make_new":false};frappe.set_route("print-format-builder");}else{frappe.set_route("Form","Print Format",print_format.name);}}else{frappe.prompt({fieldname:"print_format_name",fieldtype:"Data",reqd:1,label:"New Print Format Name"},function(data){frappe.route_options={make_new:true,doctype:me.frm.doctype,name:data.print_format_name};frappe.set_route("print-format-builder");},__("New Custom Print Format"),__("Start"));}});},preview:function(){var me=this;this.get_print_html(function(out){me.wrapper.find(".print-format").html(out.html);me.set_style(out.style);});},printit:function(){this.new_page_preview(true);},new_page_preview:function(printit){var me=this;var w=window.open("/print?"
+"doctype="+encodeURIComponent(me.frm.doc.doctype)
+"&name="+encodeURIComponent(me.frm.doc.name)
+(printit?"&trigger_print=1":"")
+"&format="+me.selected_format()
+"&no_letterhead="+(me.with_letterhead()?"0":"1"));if(!w){msgprint(__("Please enable pop-ups"));return;}},get_print_html:function(callback){frappe.call({method:"frappe.templates.pages.print.get_html_and_style",args:{doc:this.frm.doc,print_format:this.selected_format(),no_letterhead:!this.with_letterhead()?1:0},callback:function(r){if(!r.exc){callback(r.message);}}});},preview_old_style:function(){var me=this;this.with_old_style({format:me.print_sel.val(),callback:function(html){me.wrapper.find(".print-format").html('<div class="alert alert-warning">'
+__("Warning: This Print Format is in old style and cannot be generated via the API.")
+'</div>'
+html);},no_letterhead:!this.with_letterhead(),only_body:true,no_heading:true});},refresh_print_options:function(){this.print_formats=frappe.meta.get_print_formats(this.frm.doctype);return this.print_sel.empty().add_options(this.print_formats);},with_old_style:function(opts){var me=this;frappe.require("/assets/js/print_format_v3.min.js");_p.build(opts.format,opts.callback,opts.no_letterhead,opts.only_body,opts.no_heading);},print_old_style:function(){frappe.require("/assets/js/print_format_v3.min.js");_p.build(this.print_sel.val(),_p.go,!this.with_letterhead());},new_page_preview_old_style:function(){frappe.require("/assets/js/print_format_v3.min.js");_p.build(this.print_sel.val(),_p.preview,!this.with_letterhead());},selected_format:function(){return this.print_sel.val()||this.frm.meta.default_print_format||"Standard";},is_old_style:function(format){return this.get_print_format(format).print_format_type==="Client";},get_print_format:function(format){if(!format){format=this.selected_format();}
if(locals["Print Format"]&&locals["Print Format"][format]){return locals["Print Format"][format]}else{return{}}},with_letterhead:function(){return this.print_letterhead.is(":checked")?1:0;},set_style:function(style){frappe.dom.set_style(style||frappe.boot.print_css,"print-style");}});frappe.provide("frappe.ui.form");frappe.ui.form.Sidebar=Class.extend({init:function(opts){$.extend(this,opts);this.make();},make:function(){var sidebar_content=frappe.render_template("form_sidebar",{doctype:this.frm.doctype,frm:this.frm});this.offcanvas_form_sidebar=$(".offcanvas .form-sidebar").html(sidebar_content);this.page_sidebar=$('<div class="form-sidebar hidden-xs hidden-sm"></div>').html(sidebar_content).appendTo(this.page.sidebar.empty());this.sidebar=this.page_sidebar.add(this.offcanvas_form_sidebar);this.comments=this.sidebar.find(".sidebar-comments");this.user_actions=this.sidebar.find(".user-actions");this.make_assignments();this.make_attachments();this.make_shared();this.make_tags();this.bind_events();this.refresh();},bind_events:function(){var me=this;this.comments.on("click",function(){$(".offcanvas").removeClass("active-left active-right");frappe.ui.scroll(me.frm.footer.wrapper.find(".form-comments"),true);});},refresh:function(){if(this.frm.doc.__islocal){this.sidebar.toggle(false);}else{this.sidebar.toggle(true);this.frm.assign_to.refresh();this.frm.attachments.refresh();this.frm.shared.refresh();this.frm.tags&&this.frm.tags.refresh(this.frm.doc._user_tags);this.sidebar.find(".modified-by").html(__("{0} edited this {1}",["<strong>"+frappe.user.full_name(this.frm.doc.modified_by)+"</strong>","<br>"+comment_when(this.frm.doc.modified)]));this.sidebar.find(".created-by").html(__("{0} created this {1}",["<strong>"+frappe.user.full_name(this.frm.doc.owner)+"</strong>","<br>"+comment_when(this.frm.doc.creation)]));}},refresh_comments:function(){var comments=$.map(this.frm.comments.get_comments(),function(c){return(c.comment_type==="Email"||c.comment_type==="Comment")?c:null;});this.comments.find(".n-comments").html(comments.length);},make_tags:function(){var me=this;if(this.frm.meta.issingle){this.sidebar.find(".form-tags").toggle(false);return;}
this.frm.tags=new frappe.ui.TagEditor({parent:this.sidebar.find(".tag-area"),frm:this.frm,on_change:function(user_tags){me.frm.doc._user_tags=user_tags;}});},make_attachments:function(){var me=this;this.frm.attachments=new frappe.ui.form.Attachments({parent:me.sidebar.find(".form-attachments"),frm:me.frm});},make_assignments:function(){this.frm.assign_to=new frappe.ui.form.AssignTo({parent:this.sidebar.find(".form-assignments"),frm:this.frm});},make_shared:function(){this.frm.shared=new frappe.ui.form.Share({frm:this.frm,parent:this.sidebar.find(".form-shared")});},add_user_action:function(label,click){return $('<a>').html(label).appendTo($('<li class="user-action-row">').appendTo(this.user_actions.removeClass("hide"))).on("click",click);},clear_user_actions:function(){this.user_actions.addClass("hide")
this.user_actions.find(".user-action-row").remove();},});;frappe.provide("frappe.ui.form");frappe.ui.form.Share=Class.extend({init:function(opts){$.extend(this,opts);},refresh:function(){var me=this;this.parent.empty();var everyone=null;var shared=$.map(this.shared||this.frm.get_docinfo().shared,function(s){if(s.everyone){everyone=s;}
return s?s.user:null;});if(everyone){$(repl('<span><a class="avatar avatar-small avatar-empty share-doc-btn shared-with-everyone" title="%(title)s">\
    <i class="octicon octicon-megaphone text-muted"></i></a></span>',{title:__("Shared with everyone")})).appendTo(this.parent).on("click",function(){me.frm.share_doc();});}
for(var i=0;i<shared.length;i++){var user_info=frappe.user_info(shared[i]);$(repl('<span class="avatar avatar-small" title="'
+__("Shared with {0}",[user_info.fullname])+'">\
    <img class="media-object" src="%(image)s" alt="%(fullname)s"></span>',{image:user_info.image,fullname:user_info.fullname})).appendTo(this.parent).on("click",function(){me.frm.share_doc();});}
if(!me.frm.doc.__islocal){$(repl('<span><a class="avatar avatar-small avatar-empty share-doc-btn" title="%(title)s">\
    <i class="octicon octicon-plus text-muted"></i></a></span>',{title:__("Share")})).appendTo(this.parent).on("click",function(){me.frm.share_doc();});}},show:function(){var me=this;var d=new frappe.ui.Dialog({title:__("Share {0} with",[this.frm.doc.name]),});this.dialog=d;this.dirty=false;frappe.call({method:"frappe.share.get_users",args:{doctype:this.frm.doctype,name:this.frm.doc.name},callback:function(r){me.render_shared(r.message||[]);}});$(d.body).html('<p class="text-muted">'+__("Loading...")+'</p>');d.onhide=function(){if(me.dirty)me.frm.reload_docinfo();}
d.show();},render_shared:function(shared){if(shared)
this.shared=shared;var d=this.dialog;$(d.body).empty();var everyone={};$.each(this.shared,function(i,s){if(s&&s.everyone){everyone=s;}});$(frappe.render_template("set_sharing",{frm:this.frm,shared:this.shared,everyone:everyone})).appendTo(d.body);if(frappe.model.can_share(null,this.frm)){this.make_user_input();this.add_share_button();this.set_edit_share_events();}else{$(d.body).find(".edit-share").prop("disabled",true);}},make_user_input:function(){this.dialog.share_with=frappe.ui.form.make_control({parent:$(this.dialog.body).find(".input-wrapper-add-share"),df:{fieldtype:"Link",label:__("Share With"),fieldname:"share_with",options:"User",filters:{"user_type":"System User","name":["!=",user]}},only_input:true,render_input:true});},add_share_button:function(){var me=this,d=this.dialog;$(d.body).find(".btn-add-share").on("click",function(){var user=d.share_with.get_value();if(!user){return;}
frappe.call({method:"frappe.share.add",args:{doctype:me.frm.doctype,name:me.frm.doc.name,user:user,read:$(d.body).find(".add-share-read").prop("checked")?1:0,write:$(d.body).find(".add-share-write").prop("checked")?1:0,share:$(d.body).find(".add-share-share").prop("checked")?1:0},btn:this,callback:function(r){$.each(me.shared,function(i,s){if(s&&s.user===r.message.user){delete me.shared[i];}})
me.dirty=true;me.shared.push(r.message);me.render_shared();me.frm.shared.refresh();}});});},set_edit_share_events:function(){var me=this,d=this.dialog;$(d.body).find(".edit-share").on("click",function(){var user=$(this).parents(".shared-user:first").attr("data-user")||"",value=$(this).prop("checked")?1:0,property=$(this).attr("name")
everyone=cint($(this).parents(".shared-user:first").attr("data-everyone"));frappe.call({method:"frappe.share.set_permission",args:{doctype:me.frm.doctype,name:me.frm.doc.name,user:user,permission_to:property,value:value,everyone:everyone},callback:function(r){var found=null;$.each(me.shared,function(i,s){if(s&&(s.user===user||(everyone&&s.everyone===1))){if(!r.message){delete me.shared[i];}else{me.shared[i]=$.extend(s,r.message);}
found=true;return false;}});if(!found){me.shared.push(r.message);}
me.dirty=true;me.render_shared();me.frm.shared.refresh();}});});},});;frappe.templates["set_sharing"] = '<div class="padding"> <div class="row"> <div class="col-xs-6"><h6>{%= __("User") %}</h6></div> <div class="col-xs-2"><h6>{%= __("Can Read") %}</h6></div> <div class="col-xs-2"><h6>{%= __("Can Write") %}</h6></div> <div class="col-xs-2"><h6>{%= __("Can Share") %}</h6></div> </div> <div class="row shared-user" data-everyone=1> <div class="col-xs-6 share-all" style="height: 30px;"><b>{{ __("Everyone") }}</b></div> <div class="col-xs-2"><input type="checkbox" name="read" {% if(cint(everyone.read)) { %}checked{% } %} class="edit-share"></div> <div class="col-xs-2"><input type="checkbox" name="write" {% if(cint(everyone.write)) { %}checked{% } %} class="edit-share"></div> <div class="col-xs-2"><input type="checkbox" name="share" {% if(cint(everyone.share)) { %}checked{% } %} class="edit-share"></div> </div> {% for (var i=0, l=shared.length; i < l; i++) { var s = shared[i]; %} {% if(s && !s.everyone) { %} <div class="row shared-user" data-user="{%= s.user %}" data-name="{%= s.name %}"> <div class="col-xs-6">{%= s.user %}</div> <div class="col-xs-2"><input type="checkbox" name="read" {% if(cint(s.read)) { %}checked{% } %} class="edit-share"></div> <div class="col-xs-2"><input type="checkbox" name="write" {% if(cint(s.write)) { %}checked{% } %} class="edit-share"></div> <div class="col-xs-2"><input type="checkbox" name="share" {% if(cint(s.share)) { %}checked{% } %} class="edit-share"></div> </div> {% } %} {% } %} {% if(frappe.model.can_share(null, frm)) { %} <hr> <div class="row"> <div class="col-xs-6"><h6>{%= __("Share this document with") %}</h6></div> <div class="col-xs-2"><h6>{%= __("Can Read") %}</h6></div> <div class="col-xs-2"><h6>{%= __("Can Write") %}</h6></div> <div class="col-xs-2"><h6>{%= __("Can Share") %}</h6></div> </div> <div class="row"> <div class="col-xs-6 input-wrapper-add-share"></div> <div class="col-xs-2"><input type="checkbox" class="add-share-read" name="read"></div> <div class="col-xs-2"><input type="checkbox" class="add-share-write" name="write"></div> <div class="col-xs-2"><input type="checkbox" class="add-share-share" name="share"></div> </div> <p> <button class="btn btn-primary btn-add-share">{%= __("Add") %}</button> </p> {% } %} </div> ';
frappe.templates["form_sidebar"] = '<ul class="list-unstyled sidebar-menu user-actions hide"> <li class="divider"></li> </ul> <ul class="list-unstyled sidebar-menu"> <li class="divider"></li> <li style="position: relative;"> <a class="strong sidebar-comments badge-hover"> <span>{%= __("Comments") %}</span> <span class="badge n-comments">0</span> </a> </li> {% if(frappe.help.has_help(doctype)) { %} <li><a class="strong help-link" data-doctype="{{ doctype }}">{{ __("Help") }}</a></li> {% } %} </ul> <ul class="list-unstyled sidebar-menu form-assignments"> <li class="divider"></li> <li class="h6 assigned-to-label">{%= __("Assigned To") %}</li> <li><a class="strong add-assignment">{%= __("Assign") %} <i class="octicon octicon-plus" style="margin-left: 2px;"></i></a></li> </ul> <ul class="list-unstyled sidebar-menu form-attachments"> <li class="divider"></li> <li class="h6 attachments-label">{%= __("Attachments") %}</li> <li class="divider"></li> <li><a class="strong add-attachment">{%= __("Attach File") %} <i class="octicon octicon-plus" style="margin-left: 2px;"></i></li></a> </ul> <ul class="list-unstyled sidebar-menu"> <li class="divider"></li> <li class="h6 tags-label">{%= __("Tags") %}</li> <li class="form-tags"> <div class="tag-area"></div> <div class="clearfix"></div> </li> </ul> <ul class="list-unstyled sidebar-menu"> <li class="divider"></li> <li class="h6 shared-with-label">{%= __("Shared With") %}</li> <li class="form-shared"></li> </ul> <ul class="list-unstyled sidebar-menu text-muted"> <li class="modified-by"></li> <li class="created-by"></li> </ul> {% if(frappe.get_form_sidebar_extension) { %} {{ frappe.get_form_sidebar_extension() }} {% } %} ';
frappe.templates["form_footer"] = '<div class="form-footer"> <div class="after-save"> <div class="form-comments"></div> </div> <div class="pull-right scroll-to-top"> <a onclick="scroll(0,0)"><i class="icon-chevron-up text-muted"></i></a> </div> </div> ';
frappe.templates["timeline"] = '<div class="timeline"> <div class="timeline-head"> <h6 class="text-muted">{%= __("Add a comment") %}</h6> <div> <textarea style="height: 80px" style="margin-top: 10px;" class="form-control"></textarea> </div> <div class="media"> <span class="pull-left avatar avatar-medium"> <img class="media-object" src="{%= image %}"> </span> <div class="media-body"> <div class="row"> <div class="col-xs-4"> <h6>{%= __("You") %}</h6> </div> <div class="col-xs-8 text-right" style="margin-top: 2px;"> <button class="btn btn-primary btn-go btn-xs pull-right"> {%= __("Comment") %} </button> <div class="checkbox text-muted small pull-right" style="margin-top: 3px; margin-right: 15px;"> <label> <input type="checkbox" class="is-email" style="margin-top: 1px;"> {%= __("Email") %} </label> </div> </div> </div> </div> </div> </div> <div class="timeline-items"> </div> </div> ';
frappe.templates["timeline_item"] = '<div class="media timeline-item" data-name="{%= data.name %}"> <span class="pull-left avatar avatar-medium"> <img class="media-object" src="{%= data.image %}"> </span> <div class="pull-left media-body" style="max-width: calc(100% - 41px); padding-right: 0px;"> <div> <div class="pull-right"> <span class="small text-muted"> {%= data.delete %} </span> </div> {% if(data.doctype=="Communication" || data.comment_type=="Comment") { %} <h6> <i class="{%= data.icon %} icon-fixed-width"></i> <span title="{%= data.comment_by %}">{%= data.fullname %}</span> <span class="text-muted" style="font-weight: normal;"> &ndash; {%= data.comment_on %}</span> {% if(data.doctype=="Communication") { %} {% if (frappe.model.can_read(\'Communication\')) { %} <a href="#Form/{%= data.doctype %}/{%= data.name %}" class="text-muted"> {% } %} {% if (data.delivery_status) { if (in_list(["Sent", "Opened", "Clicked"], data.delivery_status)) { var indicator_class = "green"; } else { var indicator_class = "red"; } %} <span class="text-muted">&ndash;</span> <span class="indicator-right {%= indicator_class %} delivery-status-indicator" title="{%= data.delivery_status %}"> {%= data.delivery_status %}</span> {% } else { %} {% if (frappe.model.can_read(\'Communication\')) { %} <span class="text-muted">&ndash;</span> {%= __("Details") %} {% } %} {% } %} {% if (frappe.model.can_read(\'Communication\')) { %} </a> {% } %} <a class="text-muted reply-link pull-right" data-name="{%= data.name %}">{%= __("Reply") %}</a> {% } %} </h6> <div class="reply"> <div> {%= data.comment_html %} </div> </div> {% } else if(in_list(["Assignment Completed", "Assigned", "Shared", "Unshared"], data.comment_type)) { %} <h6> <i class="{%= data.icon %} icon-fixed-width"></i> {% if(data.reference_doctype && data.reference_name) { %} <a href="#Form/{%= data.reference_doctype %}/{%= data.reference_name %}"> {% } %} {%= data.comment %} {% if(data.reference_doctype && data.reference_name) { %} </a> {% } %} <span class="text-muted" style="font-weight: normal;"> &ndash; {%= data.comment_on %}</span> </h6> {% } else { %} <h6> <i class="{%= data.icon %} icon-fixed-width"></i> <span title="{%= data.comment_by %}">{%= data.fullname %}</span> {%= data.comment %} <span class="text-muted" style="font-weight: normal;"> &ndash; {%= data.comment_on %}</span> </h6> {% } %} {% if(data.attachments && data.attachments.length) { %} <div style="margin: 10px 0px"> {% $.each(data.attachments, function(i, a) { %} <div class="text-ellipsis"> <a href="{%= a %}" class="text-muted small" target="_blank"> <i class="icon-paperclip"></i> {%= a.split("/").slice(-1)[0] %} </a> </div> {% }); %} </div> {% } %} </div> </div> </div> ';
frappe.ui.form.Footer=Class.extend({init:function(opts){var me=this;$.extend(this,opts);this.make();this.make_comments();$(this.frm.wrapper).on("render_complete",function(){me.refresh();});},make:function(){var me=this;this.wrapper=$(frappe.render_template("form_footer",{})).appendTo(this.parent);this.wrapper.find(".btn-save").click(function(){me.frm.save('Save',null,this);})},make_comments:function(){this.frm.comments=new frappe.ui.form.Comments({parent:this.wrapper.find(".form-comments"),frm:this.frm})},refresh:function(){if(this.frm.doc.__islocal){this.parent.addClass("hide");}else{this.parent.removeClass("hide");this.frm.comments.refresh();}},});;frappe.provide("frappe.ui.form");frappe.ui.form.Attachments=Class.extend({init:function(opts){$.extend(this,opts);this.make();},make:function(){var me=this;this.parent.find(".add-attachment").click(function(){me.new_attachment();});this.add_attachment_wrapper=this.parent.find(".add_attachment").parent();this.attachments_label=this.parent.find(".attachments-label");},max_reached:function(){var n=keys(this.get_attachments()).length;if(n<this.frm.meta.max_attachments||!this.frm.meta.max_attachments){return false;}
return true;},refresh:function(){var me=this;if(this.frm.doc.__islocal){this.parent.toggle(false);return;}
this.parent.toggle(true);this.parent.find(".attachment-row").remove();var max_reached=this.max_reached();this.add_attachment_wrapper.toggleClass("hide",!max_reached);var attachments=this.get_attachments();if(attachments.length){attachments.forEach(function(attachment){me.add_attachment(attachment)});}else{this.attachments_label.removeClass("has-attachments");}},get_attachments:function(){return this.frm.get_docinfo().attachments;},add_attachment:function(attachment){var file_name=attachment.file_name;var file_url=this.get_file_url(attachment);var fileid=attachment.name;if(!file_name){file_name=file_url;}
var me=this;var $attach=$(repl('<li class="attachment-row">\
    <a class="close" data-owner="%(owner)s">&times;</a>\
    <a href="%(file_url)s" target="_blank" title="%(file_name)s" \
     class="text-ellipsis" style="max-width: calc(100% - 43px);">\
     <span>%(file_name)s</span></a>\
   </li>',{file_name:file_name,file_url:frappe.urllib.get_full_url(file_url)})).insertAfter(this.attachments_label.addClass("has-attachments"));var $close=$attach.find(".close").data("fileid",fileid).click(function(){var remove_btn=this;frappe.confirm(__("Are you sure you want to delete the attachment?"),function(){me.remove_attachment($(remove_btn).data("fileid"))});return false});if(!frappe.model.can_write(this.frm.doctype,this.frm.name)){$close.remove();}},get_file_url:function(attachment){var file_url=attachment.file_url;if(!file_url){if(attachment.file_name.indexOf('files/')===0){file_url='/'+attachment.file_name;}
else{file_url='/files/'+attachment.file_name;}}
return encodeURI(file_url).replace(/#/g,'%23');},get_file_id_from_file_url:function(file_url){var fid;$.each(this.get_attachments(),function(i,attachment){if(attachment.file_url===file_url){fid=attachment.name;return false;}});return fid;},remove_attachment_by_filename:function(filename,callback){this.remove_attachment(this.get_file_id_from_file_url(filename),callback);},remove_attachment:function(fileid,callback){if(!fileid){if(callback)callback();return;}
var me=this;return frappe.call({method:'frappe.desk.form.utils.remove_attach',args:{fid:fileid,dt:me.frm.doctype,dn:me.frm.docname},callback:function(r,rt){if(r.exc){if(!r._server_messages)
msgprint(__("There were errors"));return;}
me.remove_fileid(fileid);me.frm.get_docinfo().comments.push(r.message);me.frm.comments.refresh();if(callback)callback();}});},new_attachment:function(fieldname){var me=this;if(!this.dialog){this.dialog=new frappe.ui.Dialog({title:__('Upload Attachment'),});}
this.dialog.show();this.fieldname=fieldname;$(this.dialog.body).empty();frappe.upload.make({parent:this.dialog.body,args:this.get_args(),callback:function(attachment,r){me.attachment_uploaded(attachment,r);},onerror:function(){me.dialog.hide();},btn:this.dialog.set_primary_action(__("Attach")),max_width:this.frm.cscript?this.frm.cscript.attachment_max_width:null,max_height:this.frm.cscript?this.frm.cscript.attachment_max_height:null,});},get_args:function(){return{from_form:1,doctype:this.frm.doctype,docname:this.frm.docname,}},attachment_uploaded:function(attachment,r){this.dialog&&this.dialog.hide();this.update_attachment(attachment,r.message.comment);if(this.fieldname){this.frm.set_value(this.fieldname,attachment.file_url);}},update_attachment:function(attachment,comment){if(attachment.name){this.add_to_attachments(attachment);this.refresh();if(comment){this.frm.get_docinfo().comments.push(comment);this.frm.comments.refresh();}}},add_to_attachments:function(attachment){var form_attachments=this.get_attachments();for(var i in form_attachments){if(form_attachments[i]["name"]===attachment.name)return;}
form_attachments.push(attachment);},remove_fileid:function(fileid){var attachments=this.get_attachments();var new_attachments=[];$.each(attachments,function(i,attachment){if(attachment.name!=fileid){new_attachments.push(attachment);}});this.frm.get_docinfo().attachments=new_attachments;this.refresh();}});;frappe.ui.form.Comments=Class.extend({init:function(opts){$.extend(this,opts);this.make();},make:function(){var me=this;this.wrapper=$(frappe.render_template("timeline",{image:frappe.user_info(user).image,fullname:user_fullname})).appendTo(this.parent);this.list=this.wrapper.find(".timeline-items");this.input=this.wrapper.find(".form-control");this.button=this.wrapper.find(".btn-go").on("click",function(){if(me.wrapper.find(".is-email").prop("checked")){new frappe.views.CommunicationComposer({doc:me.frm.doc,txt:frappe.markdown(me.input.val()),frm:me.frm})}else{me.add_comment(this);}});this.email_check=this.wrapper.find(".timeline-head input[type='checkbox']").on("change",function(){me.button.html($(this).prop("checked")?__("Compose"):__("Comment"));});this.list.on("click",".toggle-blockquote",function(){$(this).parent().siblings("blockquote").toggleClass("hidden");});},refresh:function(scroll_to_end){var me=this;this.last_type="Comment";if(this.frm.doc.__islocal){this.wrapper.toggle(false);return;}
this.wrapper.toggle(true);this.list.empty();var comments=[{"comment":__("Created"),"comment_type":"Created","comment_by":this.frm.doc.owner,"creation":this.frm.doc.creation}].concat(this.get_comments());$.each(comments.sort(function(a,b){return a.creation>b.creation?-1:1}),function(i,c){if(c.comment)me.render_comment(c);});this.wrapper.find(".is-email").prop("checked",this.last_type==="Email").change();this.frm.sidebar.refresh_comments();},render_comment:function(c){var me=this;this.prepare_comment(c);var $timeline_item=$(frappe.render_template("timeline_item",{data:c})).appendTo(me.list).on("click",".close",function(){var name=$(this).parents(".timeline-item:first").attr("data-name");me.delete_comment(name);return false;});if(c.comment_type==="Email"){this.last_type=c.comment_type;this.add_reply_btn_event($timeline_item,c);}},add_reply_btn_event:function($timeline_item,c){var me=this;$timeline_item.find(".reply-link").on("click",function(){var name=$(this).attr("data-name");var last_email=null;me.get_comments().forEach(function(c){if(c.name==name){last_email=c;return false;}});new frappe.views.CommunicationComposer({doc:me.frm.doc,txt:"",frm:me.frm,last_email:last_email});});},prepare_comment:function(c){if((c.comment_type||"Comment")==="Comment"&&frappe.model.can_delete("Comment")){c["delete"]='<a class="close" href="#">&times;</a>';}else{c["delete"]="";}
if(!c.comment_by)c.comment_by=this.frm.doc.owner;if(c.comment_by.indexOf("<")!==-1){c.comment_by=c.comment_by.split("<")[1].split(">")[0];}
c.image=frappe.user_info(c.comment_by).image||frappe.get_gravatar(c.comment_by);c.comment_on=comment_when(c.creation);c.fullname=frappe.user_info(c.comment_by).fullname;if(c.attachments&&typeof c.attachments==="string")
c.attachments=JSON.parse(c.attachments);if(!c.comment_type)
c.comment_type="Comment"
this.set_icon_and_color(c);if(c.comment_type==="Workflow"||c.comment_type==="Label"){c.comment_html=repl('<span class="label label-%(style)s">%(text)s</span>',{style:frappe.utils.guess_style(c.comment),text:__(c.comment)});}else{if(c.comment_type=="Email"){c.comment=c.comment.split("<!-- original-reply -->")[0];c.comment=frappe.utils.strip_original_content(c.comment);c.comment=frappe.utils.remove_script_and_style(c.comment);c.original_comment=c.comment;c.comment=frappe.utils.toggle_blockquote(c.comment);}
if(!frappe.utils.is_html(c.comment)){c.comment_html=frappe.markdown(__(c.comment));}else{c.comment_html=c.comment;c.comment_html=frappe.utils.strip_whitespace(c.comment_html);}}},set_icon_and_color:function(c){c.icon={"Email":"octicon octicon-mail","Chat":"octicon octicon-comment-discussion","Phone":"octicon octicon-device-mobile","SMS":"octicon octicon-comment","Created":"octicon octicon-plus","Submitted":"octicon octicon-lock","Cancelled":"octicon octicon-x","Assigned":"octicon octicon-person","Assignment Completed":"octicon octicon-check","Comment":"octicon octicon-comment-discussion","Workflow":"octicon octicon-git-branch","Label":"octicon octicon-tag","Attachment":"octicon octicon-cloud-upload","Attachment Removed":"octicon octicon-trashcan","Shared":"octicon octicon-eye","Unshared":"octicon octicon-circle-slash"}[c.comment_type]
c.color={"Email":"#3498db","Chat":"#3498db","Phone":"#3498db","SMS":"#3498db","Created":"#1abc9c","Submitted":"#1abc9c","Cancelled":"#c0392b","Assigned":"#f39c12","Assignment Completed":"#16a085","Comment":"#f39c12","Workflow":"#2c3e50","Label":"#2c3e50","Attachment":"#7f8c8d","Attachment Removed":"#eee"}[c.comment_type];c.icon_fg={"Attachment Removed":"#333",}[c.comment_type]
if(!c.icon_fg)
c.icon_fg="#fff";},get_comments:function(){return this.frm.get_docinfo().comments;},add_comment:function(btn){var txt=this.input.val();if(txt){this.insert_comment("Comment",txt,btn);}},insert_comment:function(comment_type,comment,btn){var me=this;return frappe.call({method:"frappe.desk.form.utils.add_comment",args:{doc:{doctype:"Comment",comment_type:comment_type||"Comment",comment_doctype:this.frm.doctype,comment_docname:this.frm.docname,comment:comment,comment_by:user}},btn:btn,callback:function(r){if(!r.exc){me.input.val("");var comment=r.message;var comments=me.get_comments();var comment_exists=false;for(var i=0,l=comments.length;i<l;i++){if(comments[i].name==comment.name){comment_exists=true;break;}}
if(comment_exists){return;}
me.frm.get_docinfo().comments=comments.concat([r.message]);me.refresh(true);}}});},delete_comment:function(name){var me=this;return frappe.call({method:"frappe.client.delete",args:{doctype:"Comment",name:name},callback:function(r){if(!r.exc){me.frm.get_docinfo().comments=$.map(me.frm.get_docinfo().comments,function(v){if(v.name==name)return null;else return v;});me.refresh(true);}}});},get_recipient:function(){if(this.frm.email_field){return this.frm.doc[this.frm.email_field];}else{return this.frm.doc.email_id||this.frm.doc.email||"";}},get_last_email:function(from_recipient){var last_email=null,comments=this.frm.get_docinfo().comments,email=this.get_recipient();$.each(comments.sort(function(a,b){return a.creation>b.creation?-1:1}),function(i,c){if(c.comment_type=="Email"){if(from_recipient){if(c.comment_by.indexOf(email)!==-1){last_email=c;return false;}}else{last_email=c;return false;}}});return last_email;}});;frappe.provide("frappe.ui.form");frappe.ui.form.AssignTo=Class.extend({init:function(opts){var me=this;$.extend(this,opts);this.btn=this.parent.find(".add-assignment").on("click",function(){me.add();});this.btn_wrapper=this.btn.parent();this.refresh();},refresh:function(){if(this.frm.doc.__islocal){this.parent.toggle(false);return;}
this.parent.toggle(true);this.render(this.frm.get_docinfo().assignments);},render:function(d){var me=this;this.frm.get_docinfo().assignments=d;this.parent.find(".assignment-row").remove();if(me.primary_action){me.primary_action.remove();me.primary_action=null;}
if(this.dialog){this.dialog.hide();}
if(d&&d.length){for(var i=0;i<d.length;i++){var info=frappe.user_info(d[i].owner);info.owner=d[i].owner;info.image=frappe.user_info(d[i].owner).image;info.description=d[i].description||"";$(repl('<li class="assignment-row">\
     <a class="close" data-owner="%(owner)s">&times;</a>\
     <div class="text-ellipsis" style="width: 80%">\
      <div class="avatar avatar-small">\
       <img class="media-object" src="%(image)s" alt="%(fullname)s">\
      </div>\
      <span>%(fullname)s</span>\
     </div>\
    </li>',info)).appendTo(this.parent);if(d[i].owner===user){me.primary_action=this.frm.page.add_menu_item(__("Assignment Complete"),function(){me.remove(user);},"icon-ok","btn-success")}
if(!(d[i].owner===user||me.frm.perm[0].write)){me.parent.find('a.close').remove();}}
this.parent.find('a.close').click(function(){me.remove($(this).attr('data-owner'));return false;});this.btn_wrapper.addClass("hide");}else{this.btn_wrapper.removeClass("hide");}},add:function(){var me=this;if(this.frm.doc.__unsaved==1){frappe.throw(__("Please save the document before assignment"));return;}
if(!me.dialog){me.dialog=new frappe.ui.Dialog({title:__('Add to To Do'),fields:[{fieldtype:'Check',fieldname:'myself',label:__("Assign to me"),"default":0},{fieldtype:'Link',fieldname:'assign_to',options:'User',label:__("Assign To"),description:__("Add to To Do List Of"),reqd:true},{fieldtype:'Data',fieldname:'description',label:__("Comment"),reqd:true},{fieldtype:'Check',fieldname:'notify',label:__("Notify by Email"),"default":1},{fieldtype:'Date',fieldname:'date',label:__("Complete By")},{fieldtype:'Select',fieldname:'priority',label:__("Priority"),options:'Low\nMedium\nHigh','default':'Medium'},],primary_action:function(){me.add_assignment();},primary_action_label:__("Add")});me.dialog.fields_dict.assign_to.get_query="frappe.core.doctype.user.user.user_query";}
me.dialog.clear();if(me.frm.meta.title_field){me.dialog.set_value("description",me.frm.doc[me.frm.meta.title_field])}
me.dialog.show();me.dialog.get_input("myself").on("click",function(){if($(this).prop("checked")){me.dialog.set_value("assign_to",user);me.dialog.set_value("notify",0);}else{me.dialog.set_value("assign_to","");me.dialog.set_value("notify",1);}});},add_assignment:function(){var me=this;var assign_to=me.dialog.fields_dict.assign_to.get_value();var args=me.dialog.get_values();if(args&&assign_to){return frappe.call({method:'frappe.desk.form.assign_to.add',args:$.extend(args,{doctype:me.frm.doctype,name:me.frm.docname,assign_to:assign_to}),callback:function(r,rt){if(!r.exc){me.render(r.message);me.frm.reload_doc();}},btn:this});}},remove:function(owner){var me=this;if(this.frm.doc.__unsaved==1){frappe.throw(__("Please save the document before removing assignment"));return;}
frappe.call({method:'frappe.desk.form.assign_to.remove',args:{doctype:me.frm.doctype,name:me.frm.docname,assign_to:owner},callback:function(r,rt){me.render(r.message);me.frm.reload_doc();}});}});;